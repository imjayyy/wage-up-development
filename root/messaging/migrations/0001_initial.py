# Generated by Django 2.1.4 on 2021-04-15 18:19

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0002_auto_20210311_0933'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Announcements',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('starts', models.DateTimeField(auto_created=True)),
                ('ends', models.DateTimeField(blank=True, null=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('position_types', models.CharField(blank=True, choices=[('everyone', 'everyone'), ('Appeals-Access', 'Appeals-Access'), ('Driver', 'Driver'), ('Executive', 'Executive'), ('Facility-Rep', 'Facility-Rep'), ('Field-Rep', 'Field-Rep'), ('Fleet-Manager', 'Fleet-Manager'), ('Fleet-Supervisor', 'Fleet-Supervisor'), ('Project Manager', 'Project Manager'), ('Station-Admin', 'Station-Admin'), ('Territory-Associate', 'Territory-Associate')], default='everyone', max_length=255, null=True)),
                ('link', models.CharField(blank=True, max_length=255, null=True)),
                ('type', models.CharField(blank=True, choices=[('is-danger', 'is-danger'), ('is-success', 'is-success'), ('is-primary', 'is-primary'), ('is-warning', 'is-warning')], default='is-primary', max_length=255, null=True)),
                ('read', models.ManyToManyField(blank=True, null=True, related_name='announcements', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BroadcastResponse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('responseBool', models.BooleanField(null=True)),
                ('responseChar', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ChatGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('private', models.BooleanField(default=False)),
                ('position_type', models.CharField(blank=True, max_length=255, null=True)),
                ('lastMessageID', models.IntegerField(blank=True, null=True)),
                ('lastMessageTime', models.DateTimeField(blank=True, null=True)),
                ('invited_users', models.ManyToManyField(related_name='chat_group_invited', to=settings.AUTH_USER_MODEL)),
                ('online_users', models.ManyToManyField(related_name='chat_group_online', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='online_users', to='accounts.Organization')),
            ],
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(blank=True, null=True)),
                ('time', models.DateTimeField(blank=True, null=True)),
                ('data', models.TextField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('from_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='chat_from', to=settings.AUTH_USER_MODEL)),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='chat_from', to='messaging.ChatGroup')),
            ],
        ),
        migrations.CreateModel(
            name='EmailData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requestData', models.TextField(blank=True, null=True)),
                ('subject', models.CharField(blank=True, max_length=255, null=True)),
                ('lambdaTableData', models.TextField(blank=True, null=True)),
                ('lambdaSVGData', models.TextField(blank=True, null=True)),
                ('lambdaData', models.TextField(blank=True, null=True)),
                ('pdf_attachment', models.BooleanField(null=True)),
                ('xls_attachment', models.BooleanField(null=True)),
                ('updated', models.DateTimeField(auto_now_add=True, null=True)),
                ('disabled', models.BooleanField(default=False)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='email_author', to=settings.AUTH_USER_MODEL)),
                ('recipients', models.ManyToManyField(related_name='UserEmailRecipient', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EmailLogs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_delivered', models.DateTimeField(auto_created=True)),
                ('sent_to', models.EmailField(blank=True, max_length=254, null=True)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('parameters', models.TextField(blank=True, null=True)),
                ('generated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recipient_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Meeting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meeting_name', models.CharField(blank=True, max_length=255, null=True)),
                ('meeting_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('meeting_creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('participants', models.ManyToManyField(related_name='meeting_participants', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='NotificationLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('notification', models.TextField(blank=True, null=True)),
                ('time', models.DateTimeField(auto_now_add=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notification_log', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ScheduledMessages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interval', models.CharField(blank=True, max_length=255, null=True)),
                ('starting', models.DateField(blank=True, null=True)),
                ('ending', models.DateField(blank=True, null=True)),
                ('email_data', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='schedule_email_data', to='messaging.EmailData')),
            ],
        ),
        migrations.CreateModel(
            name='TriggerMessages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric', models.CharField(blank=True, max_length=255, null=True)),
                ('comparison_type', models.CharField(blank=True, max_length=255, null=True)),
                ('value', models.FloatField(blank=True, null=True)),
                ('logical_operator', models.CharField(blank=True, max_length=255, null=True)),
                ('time_type', models.CharField(blank=True, max_length=255, null=True)),
                ('sc_dt', models.DateField(blank=True, null=True)),
                ('time_relation', models.CharField(blank=True, max_length=255, null=True)),
                ('conjoined_trigger', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trigger_conjoined', to='messaging.TriggerMessages')),
                ('email_data', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trigger_email_data', to='messaging.EmailData')),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trigger_emp', to='accounts.Employee')),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trigger_org', to='accounts.Organization')),
            ],
        ),
        migrations.AddField(
            model_name='broadcastresponse',
            name='message',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='broadcast_response', to='messaging.ChatMessage'),
        ),
        migrations.AddField(
            model_name='broadcastresponse',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='broadcast_response', to=settings.AUTH_USER_MODEL),
        ),
    ]
