# Generated by Django 4.0.4 on 2022-11-14 22:04

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0009_alter_employee_duplicate_and_more'),
        ('training', '0002_shoutout'),
    ]

    operations = [
        migrations.CreateModel(
            name='ModulePage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, choices=[('questions', 'questions'), ('audio', 'audio'), ('video', 'video')], max_length=255, null=True)),
                ('media_link', models.CharField(blank=True, max_length=255, null=True)),
                ('media_length_required', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ModuleQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=255)),
                ('type', models.CharField(blank=True, choices=[('multiple_choice', 'multiple_choice'), ('true_false', 'true_false'), ('open_ended', 'open_ended')], max_length=255, null=True)),
                ('page', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='page_questions', to='training.modulepage')),
            ],
        ),
        migrations.CreateModel(
            name='ModuleTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.AddField(
            model_name='moduleoverview',
            name='active',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='moduleoverview',
            name='creator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.employee'),
        ),
        migrations.CreateModel(
            name='QuestionsAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.CharField(max_length=255)),
                ('is_correct', models.BooleanField(default=False)),
                ('question', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='training.modulequestion')),
            ],
        ),
        migrations.AddField(
            model_name='modulepage',
            name='overview',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='overview_pages', to='training.moduleoverview'),
        ),
        migrations.CreateModel(
            name='ModuleCompletion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completed', models.BooleanField(default=False)),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employee_module_completions', to='accounts.employee')),
                ('last_completed_page', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='module_completion_page', to='training.modulepage')),
                ('module', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='module_completion', to='training.moduleoverview')),
            ],
        ),
        migrations.AddField(
            model_name='moduleoverview',
            name='tags',
            field=models.ManyToManyField(to='training.moduletag'),
        ),
    ]
