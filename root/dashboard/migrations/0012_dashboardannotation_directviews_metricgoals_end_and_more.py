# Generated by Django 4.0.4 on 2022-11-10 17:48

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0009_alter_employee_duplicate_and_more'),
        ('onboarding', '0002_alter_documentation_faq'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('dashboard', '0011_auto_20210902_1051'),
    ]

    operations = [
        migrations.CreateModel(
            name='DashboardAnnotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('json', models.TextField()),
                ('employee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dashboard_annotation', to='accounts.employee')),
                ('organization', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='organization_dashboard_annotation', to='accounts.organization')),
            ],
        ),
        migrations.CreateModel(
            name='DirectViews',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tableName', models.CharField(max_length=100)),
                ('label', models.CharField(blank=True, max_length=255, null=True)),
                ('explanation', models.TextField(blank=True, null=True)),
                ('filter_options', models.JSONField(blank=True, null=True)),
                ('lambdaOptions', models.JSONField(blank=True, null=True)),
                ('icon', models.CharField(default='task', max_length=100)),
            ],
        ),
        migrations.AddField(
            model_name='metricgoals',
            name='end',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='metricgoals',
            name='facility_type',
            field=models.CharField(blank=True, choices=[('PSP', 'PSP'), ('NON-PSP', 'PSP'), ('Fleet', 'PSP')], max_length=10, null=True),
        ),
        migrations.AddField(
            model_name='metricgoals',
            name='green',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='metricgoals',
            name='highGood',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='metricgoals',
            name='metric',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='goals_documentation', to='onboarding.documentation'),
        ),
        migrations.AddField(
            model_name='metricgoals',
            name='start',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='metricgoals',
            name='yellow',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='timeseriespredictionsbyfourhournew',
            name='active_holidays',
            field=models.BooleanField(blank=True, db_column='ACTIVE_HOLIDAYS', null=True),
        ),
        migrations.AlterField(
            model_name='timeseriespredictionsbyfourhournew',
            name='active_weather',
            field=models.BooleanField(blank=True, db_column='ACTIVE_WEATHER', null=True),
        ),
        migrations.AlterField(
            model_name='timeseriespredictionsbyhournew',
            name='active_holidays',
            field=models.BooleanField(blank=True, db_column='ACTIVE_HOLIDAYS', null=True),
        ),
        migrations.AlterField(
            model_name='timeseriespredictionsbyhournew',
            name='active_weather',
            field=models.BooleanField(blank=True, db_column='ACTIVE_WEATHER', null=True),
        ),
        migrations.AlterField(
            model_name='timeseriespredictionsbyhourswap',
            name='active_holidays',
            field=models.BooleanField(blank=True, db_column='ACTIVE_HOLIDAYS', null=True),
        ),
        migrations.AlterField(
            model_name='timeseriespredictionsbyhourswap',
            name='active_weather',
            field=models.BooleanField(blank=True, db_column='ACTIVE_WEATHER', null=True),
        ),
        migrations.AlterIndexTogether(
            name='metricgoals',
            index_together={('employee', 'organization', 'metric')},
        ),
        migrations.CreateModel(
            name='DashboardCommentReadStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('viewed', models.BooleanField(default=False)),
                ('dashboard_element', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dashboard_element_read', to='dashboard.employeedashboardelement')),
                ('employee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employee_dashboard_comment_read_status', to='accounts.employee')),
                ('organization', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='organization_dashboard_comment_read_status', to='accounts.organization')),
                ('viewer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dashboard_comment_viewer', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DashboardComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('message', models.TextField()),
                ('sender_avatar', models.CharField(blank=True, max_length=255, null=True)),
                ('annotation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='annotation_dashboard_comment', to='dashboard.dashboardannotation')),
                ('dashboard_element', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dashboard_comment', to='dashboard.employeedashboardelement')),
                ('employee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employee_dashboard_comment', to='accounts.employee')),
                ('organization', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='organization_dashboard_comment', to='accounts.organization')),
                ('parent_comment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.dashboardcomment')),
                ('rating', models.ManyToManyField(to='accounts.employee')),
            ],
        ),
        migrations.RemoveField(
            model_name='metricgoals',
            name='month',
        ),
        migrations.RemoveField(
            model_name='metricgoals',
            name='range',
        ),
        migrations.RemoveField(
            model_name='metricgoals',
            name='target',
        ),
        migrations.AddField(
            model_name='employeedashboardelement',
            name='initial_annotation',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dashboard_element_annotation', to='dashboard.dashboardannotation'),
        ),
    ]
