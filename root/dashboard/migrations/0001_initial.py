# Generated by Django 2.1.4 on 2021-03-09 23:36

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Appeals',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_date', models.DateTimeField(blank=True, db_column='Service Date', null=True)),
                ('call_number', models.CharField(blank=True, db_column='Call Number', max_length=255, null=True)),
                ('incentive_month', models.BigIntegerField(blank=True, db_column='incentive month', null=True)),
                ('incentive_year', models.BigIntegerField(blank=True, db_column='incentive year', null=True)),
                ('reroutes', models.BigIntegerField(blank=True, db_column='Reroutes', null=True)),
                ('removes', models.BigIntegerField(blank=True, db_column='Removes', null=True)),
                ('date_added', models.DateTimeField(blank=True, null=True)),
                ('date_modified', models.DateTimeField(blank=True, null=True)),
                ('appeal_type', models.CharField(max_length=5)),
                ('good', models.BooleanField(null=True)),
            ],
            options={
                'db_table': 'appeals',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Checkidopsraw',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sc_id', models.BigIntegerField(blank=True, db_column='SC_ID', null=True)),
                ('call_id', models.CharField(blank=True, max_length=255, null=True)),
                ('sc_dt', models.DateTimeField(blank=True, db_column='SC_DT', null=True)),
                ('re_tm', models.DateTimeField(blank=True, db_column='RE_TM', null=True)),
                ('fst_ol_time', models.DateTimeField(blank=True, null=True)),
                ('time', models.TextField(blank=True, null=True)),
                ('api_response', models.TextField(blank=True, null=True)),
                ('d3_fname', models.TextField(blank=True, null=True)),
                ('d3_lname', models.TextField(blank=True, null=True)),
                ('fname', models.TextField(blank=True, null=True)),
                ('lname', models.TextField(blank=True, null=True)),
                ('driver_name', models.CharField(blank=True, max_length=255, null=True)),
                ('emp_driver_id', models.FloatField(blank=True, null=True)),
                ('svc_facl_id', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'CheckIDOpsRaw',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DashboardAggregations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sc_dt', models.DateTimeField(blank=True, db_column='SC_DT', null=True)),
                ('index_type', models.CharField(blank=True, db_column='INDEX_TYPE', max_length=100, null=True)),
                ('week_day', models.IntegerField(blank=True, db_column='WEEK_DAY', null=True)),
                ('id_name_helper', models.CharField(blank=True, db_column='ID_NAME_HELPER', max_length=255, null=True)),
                ('time_type', models.CharField(blank=True, db_column='TIME_TYPE', max_length=100, null=True)),
                ('external_call_out_freq', models.DecimalField(blank=True, db_column='EXTERNAL_CALL_OUT_FREQ', decimal_places=4, max_digits=23, null=True)),
                ('truck_call_member_freq', models.DecimalField(blank=True, db_column='TRUCK_CALL_MEMBER_FREQ', decimal_places=4, max_digits=23, null=True)),
                ('spp_call_member_freq', models.DecimalField(blank=True, db_column='SPP_CALL_MEMBER_FREQ', decimal_places=4, max_digits=23, null=True)),
                ('dispatch_call_member_freq', models.DecimalField(blank=True, db_column='DISPATCH_CALL_MEMBER_FREQ', decimal_places=4, max_digits=23, null=True)),
                ('dispatch_call_out_freq', models.DecimalField(blank=True, db_column='DISPATCH_CALL_OUT_FREQ', decimal_places=4, max_digits=23, null=True)),
                ('text_message_freq', models.DecimalField(blank=True, db_column='TEXT_MESSAGE_FREQ', decimal_places=4, max_digits=23, null=True)),
                ('call_accepted_freq', models.DecimalField(blank=True, db_column='CALL_ACCEPTED_FREQ', decimal_places=4, max_digits=7, null=True)),
                ('early_freq', models.DecimalField(blank=True, db_column='EARLY_FREQ', decimal_places=4, max_digits=7, null=True)),
                ('late_freq', models.DecimalField(blank=True, db_column='LATE_FREQ', decimal_places=4, max_digits=7, null=True)),
                ('ata_under_45_freq', models.DecimalField(blank=True, db_column='ATA_UNDER_45_FREQ', decimal_places=4, max_digits=7, null=True)),
                ('on_time_freq', models.DecimalField(blank=True, db_column='ON_TIME_FREQ', decimal_places=4, max_digits=7, null=True)),
                ('long_ata_freq', models.DecimalField(blank=True, db_column='LONG_ATA_FREQ', decimal_places=4, max_digits=7, null=True)),
                ('no_service_rendered_freq', models.DecimalField(blank=True, db_column='NO_SERVICE_RENDERED_FREQ', decimal_places=4, max_digits=7, null=True)),
                ('cancelled_freq', models.DecimalField(blank=True, db_column='CANCELLED_FREQ', decimal_places=4, max_digits=7, null=True)),
                ('ng_to_g_freq', models.DecimalField(blank=True, db_column='NG_TO_G_FREQ', decimal_places=4, max_digits=7, null=True)),
                ('g_to_g_freq', models.DecimalField(blank=True, db_column='G_TO_G_FREQ', decimal_places=4, max_digits=7, null=True)),
                ('g_to_ng_freq', models.DecimalField(blank=True, db_column='G_TO_NG_FREQ', decimal_places=4, max_digits=7, null=True)),
                ('ng_to_ng_freq', models.DecimalField(blank=True, db_column='NG_TO_NG_FREQ', decimal_places=4, max_digits=7, null=True)),
                ('dispatch_communicated_freq', models.DecimalField(blank=True, db_column='DISPATCH_COMMUNICATED_FREQ', decimal_places=4, max_digits=7, null=True)),
                ('outside_communicated_freq', models.DecimalField(blank=True, db_column='OUTSIDE_COMMUNICATED_FREQ', decimal_places=4, max_digits=7, null=True)),
                ('batt_test_on_batt_call_freq', models.DecimalField(blank=True, db_column='BATT_TEST_ON_BATT_CALL_FREQ', decimal_places=4, max_digits=7, null=True)),
                ('replaced_batt_on_failed_batt_call_freq', models.DecimalField(blank=True, db_column='REPLACED_BATT_ON_FAILED_BATT_CALL_FREQ', decimal_places=4, max_digits=7, null=True)),
                ('heavy_user_freq', models.FloatField(blank=True, db_column='HEAVY_USER_FREQ', null=True)),
                ('reroute_freq', models.DecimalField(blank=True, db_column='REROUTE_FREQ', decimal_places=4, max_digits=7, null=True)),
                ('call_cost_avg', models.FloatField(blank=True, db_column='CALL_COST_AVG', null=True)),
                ('credit_card_spend_avg', models.FloatField(blank=True, db_column='CREDIT_CARD_SPEND_AVG', null=True)),
                ('base_cost_avg', models.FloatField(blank=True, db_column='BASE_COST_AVG', null=True)),
                ('enroute_cost_avg', models.FloatField(blank=True, db_column='ENROUTE_COST_AVG', null=True)),
                ('tow_cost_avg', models.FloatField(blank=True, db_column='TOW_COST_AVG', null=True)),
                ('eta_update_avg', models.DecimalField(blank=True, db_column='ETA_UPDATE_AVG', decimal_places=4, max_digits=23, null=True)),
                ('arc_kmi_avg', models.FloatField(blank=True, db_column='ARC_KMI_AVG', null=True)),
                ('battery_volume', models.DecimalField(blank=True, db_column='BATTERY_VOLUME', decimal_places=0, max_digits=23, null=True)),
                ('tow_volume', models.DecimalField(blank=True, db_column='TOW_VOLUME', decimal_places=0, max_digits=23, null=True)),
                ('not_tow_volume', models.DecimalField(blank=True, db_column='NOT_TOW_VOLUME', decimal_places=0, max_digits=23, null=True)),
                ('volume', models.DecimalField(blank=True, db_column='VOLUME', decimal_places=0, max_digits=23, null=True)),
                ('all_volume', models.BigIntegerField(blank=True, db_column='ALL_VOLUME', null=True)),
                ('has_tablet_volume', models.DecimalField(blank=True, db_column='HAS_TABLET_VOLUME', decimal_places=0, max_digits=23, null=True)),
                ('check_id_scan_count', models.DecimalField(blank=True, db_column='CHECK_ID_SCAN_COUNT', decimal_places=0, max_digits=23, null=True)),
                ('check_id_manual_count', models.DecimalField(blank=True, db_column='CHECK_ID_MANUAL_COUNT', decimal_places=0, max_digits=23, null=True)),
                ('check_id_alt_id_military_count', models.DecimalField(blank=True, db_column='CHECK_ID_ALT_ID_MILITARY_COUNT', decimal_places=0, max_digits=23, null=True)),
                ('check_id_alt_id_dl_count', models.DecimalField(blank=True, db_column='CHECK_ID_ALT_ID_DL_COUNT', decimal_places=0, max_digits=23, null=True)),
                ('check_id_alt_id_registration_count', models.DecimalField(blank=True, db_column='CHECK_ID_ALT_ID_REGISTRATION_COUNT', decimal_places=0, max_digits=23, null=True)),
                ('check_id_alt_id_passport_count', models.DecimalField(blank=True, db_column='CHECK_ID_ALT_ID_PASSPORT_COUNT', decimal_places=0, max_digits=23, null=True)),
                ('check_id_alt_id_other_govt_count', models.DecimalField(blank=True, db_column='CHECK_ID_ALT_ID_OTHER_GOVT_COUNT', decimal_places=0, max_digits=23, null=True)),
                ('check_id_alt_id_foreign_count', models.DecimalField(blank=True, db_column='CHECK_ID_ALT_ID_FOREIGN_COUNT', decimal_places=0, max_digits=23, null=True)),
                ('check_id_declined_reason_no_id_match_count', models.DecimalField(blank=True, db_column='CHECK_ID_DECLINED_REASON_NO_ID_MATCH_COUNT', decimal_places=0, max_digits=23, null=True)),
                ('check_id_declined_reason_no_valid_id_count', models.DecimalField(blank=True, db_column='CHECK_ID_DECLINED_REASON_NO_VALID_ID_COUNT', decimal_places=0, max_digits=23, null=True)),
                ('check_id_declined_reason_gone_on_arrival_count', models.DecimalField(blank=True, db_column='CHECK_ID_DECLINED_REASON_GONE_ON_ARRIVAL_COUNT', decimal_places=0, max_digits=23, null=True)),
                ('check_id_run_call_reason_safety_count', models.DecimalField(blank=True, db_column='CHECK_ID_RUN_CALL_REASON_SAFETY_COUNT', decimal_places=0, max_digits=23, null=True)),
                ('check_id_run_call_reason_other_count', models.DecimalField(blank=True, db_column='CHECK_ID_RUN_CALL_REASON_OTHER_COUNT', decimal_places=0, max_digits=23, null=True)),
                ('check_id_no_scan_reason_decline_scan_count', models.DecimalField(blank=True, db_column='CHECK_ID_NO_SCAN_REASON_DECLINE_SCAN_COUNT', decimal_places=0, max_digits=23, null=True)),
                ('check_id_no_scan_reason_scan_fail_count', models.DecimalField(blank=True, db_column='CHECK_ID_NO_SCAN_REASON_SCAN_FAIL_COUNT', decimal_places=0, max_digits=23, null=True)),
                ('batt_call_count', models.DecimalField(blank=True, db_column='BATT_CALL_COUNT', decimal_places=0, max_digits=23, null=True)),
                ('pass_batt_test_count', models.DecimalField(blank=True, db_column='PASS_BATT_TEST_COUNT', decimal_places=0, max_digits=23, null=True)),
                ('call_cost_sum', models.FloatField(blank=True, db_column='CALL_COST_SUM', null=True)),
                ('credit_card_spend_sum', models.FloatField(blank=True, db_column='CREDIT_CARD_SPEND_SUM', null=True)),
                ('base_cost_sum', models.FloatField(blank=True, db_column='BASE_COST_SUM', null=True)),
                ('enroute_cost_sum', models.FloatField(blank=True, db_column='ENROUTE_COST_SUM', null=True)),
                ('tow_cost_sum', models.FloatField(blank=True, db_column='TOW_COST_SUM', null=True)),
                ('external_call_out_count', models.DecimalField(blank=True, db_column='EXTERNAL_CALL_OUT_COUNT', decimal_places=0, max_digits=41, null=True)),
                ('truck_call_member_count', models.DecimalField(blank=True, db_column='TRUCK_CALL_MEMBER_COUNT', decimal_places=0, max_digits=41, null=True)),
                ('spp_call_member_count', models.DecimalField(blank=True, db_column='SPP_CALL_MEMBER_COUNT', decimal_places=0, max_digits=41, null=True)),
                ('dispatch_call_member_count', models.DecimalField(blank=True, db_column='DISPATCH_CALL_MEMBER_COUNT', decimal_places=0, max_digits=41, null=True)),
                ('dispatch_call_out_count', models.DecimalField(blank=True, db_column='DISPATCH_CALL_OUT_COUNT', decimal_places=0, max_digits=41, null=True)),
                ('text_message_count', models.DecimalField(blank=True, db_column='TEXT_MESSAGE_COUNT', decimal_places=0, max_digits=41, null=True)),
                ('call_accepted_count', models.DecimalField(blank=True, db_column='CALL_ACCEPTED_COUNT', decimal_places=0, max_digits=25, null=True)),
                ('early_count', models.DecimalField(blank=True, db_column='EARLY_COUNT', decimal_places=0, max_digits=25, null=True)),
                ('late_count', models.DecimalField(blank=True, db_column='LATE_COUNT', decimal_places=0, max_digits=25, null=True)),
                ('ata_under_45_count', models.DecimalField(blank=True, db_column='ATA_UNDER_45_COUNT', decimal_places=0, max_digits=25, null=True)),
                ('on_time_count', models.DecimalField(blank=True, db_column='ON_TIME_COUNT', decimal_places=0, max_digits=25, null=True)),
                ('long_ata_count', models.DecimalField(blank=True, db_column='LONG_ATA_COUNT', decimal_places=0, max_digits=25, null=True)),
                ('no_service_rendered_count', models.DecimalField(blank=True, db_column='NO_SERVICE_RENDERED_COUNT', decimal_places=0, max_digits=25, null=True)),
                ('cancelled_count', models.DecimalField(blank=True, db_column='CANCELLED_COUNT', decimal_places=0, max_digits=25, null=True)),
                ('ng_to_g_count', models.DecimalField(blank=True, db_column='NG_TO_G_COUNT', decimal_places=0, max_digits=25, null=True)),
                ('g_to_g_count', models.DecimalField(blank=True, db_column='G_TO_G_COUNT', decimal_places=0, max_digits=25, null=True)),
                ('g_to_ng_count', models.DecimalField(blank=True, db_column='G_TO_NG_COUNT', decimal_places=0, max_digits=25, null=True)),
                ('ng_to_ng_count', models.DecimalField(blank=True, db_column='NG_TO_NG_COUNT', decimal_places=0, max_digits=25, null=True)),
                ('dispatch_communicated_count', models.DecimalField(blank=True, db_column='DISPATCH_COMMUNICATED_COUNT', decimal_places=0, max_digits=25, null=True)),
                ('outside_communicated_count', models.DecimalField(blank=True, db_column='OUTSIDE_COMMUNICATED_COUNT', decimal_places=0, max_digits=25, null=True)),
                ('batt_test_on_batt_call_count', models.DecimalField(blank=True, db_column='BATT_TEST_ON_BATT_CALL_COUNT', decimal_places=0, max_digits=25, null=True)),
                ('replaced_batt_on_failed_batt_call_count', models.DecimalField(blank=True, db_column='REPLACED_BATT_ON_FAILED_BATT_CALL_COUNT', decimal_places=0, max_digits=25, null=True)),
                ('heavy_user_count', models.FloatField(blank=True, db_column='HEAVY_USER_COUNT', null=True)),
                ('check_id_compliant_count', models.DecimalField(blank=True, db_column='CHECK_ID_COMPLIANT_COUNT', decimal_places=0, max_digits=25, null=True)),
                ('check_id_check_fail_count', models.DecimalField(blank=True, db_column='CHECK_ID_CHECK_FAIL_COUNT', decimal_places=0, max_digits=25, null=True)),
                ('check_id_scan_screen_used_count', models.DecimalField(blank=True, db_column='CHECK_ID_SCAN_SCREEN_USED_COUNT', decimal_places=0, max_digits=25, null=True)),
                ('check_id_declined_reason_no_name_match_count', models.FloatField(blank=True, db_column='CHECK_ID_DECLINED_REASON_NO_NAME_MATCH_COUNT', null=True)),
                ('check_id_ran_call_bad_id_count', models.DecimalField(blank=True, db_column='CHECK_ID_RAN_CALL_BAD_ID_COUNT', decimal_places=0, max_digits=25, null=True)),
                ('check_id_showed_valid_id_count', models.DecimalField(blank=True, db_column='CHECK_ID_SHOWED_VALID_ID_COUNT', decimal_places=0, max_digits=25, null=True)),
                ('lost_call_count', models.DecimalField(blank=True, db_column='LOST_CALL_COUNT', decimal_places=0, max_digits=25, null=True)),
                ('lost_call_freq', models.DecimalField(blank=True, db_column='LOST_CALL_FREQ', decimal_places=4, max_digits=29, null=True)),
                ('ata_median', models.FloatField(blank=True, db_column='ATA_MEDIAN', null=True)),
                ('pta_median', models.FloatField(blank=True, db_column='PTA_MEDIAN', null=True)),
                ('ata_minus_pta_median', models.FloatField(blank=True, db_column='ATA_MINUS_PTA_MEDIAN', null=True)),
                ('check_id_compliant_freq', models.DecimalField(blank=True, db_column='CHECK_ID_COMPLIANT_FREQ', decimal_places=4, max_digits=29, null=True)),
                ('check_id_compliant_with_tablet_freq', models.DecimalField(blank=True, db_column='CHECK_ID_COMPLIANT_WITH_TABLET_FREQ', decimal_places=4, max_digits=29, null=True)),
                ('short_freq', models.DecimalField(blank=True, db_column='SHORT_FREQ', decimal_places=4, max_digits=8, null=True)),
                ('check_id_scan_freq', models.DecimalField(blank=True, db_column='CHECK_ID_SCAN_FREQ', decimal_places=4, max_digits=27, null=True)),
                ('check_id_manual_freq', models.DecimalField(blank=True, db_column='CHECK_ID_MANUAL_FREQ', decimal_places=4, max_digits=27, null=True)),
                ('check_id_check_fail_freq', models.DecimalField(blank=True, db_column='CHECK_ID_CHECK_FAIL_FREQ', decimal_places=4, max_digits=29, null=True)),
                ('check_id_decline_run_call_count', models.DecimalField(blank=True, db_column='CHECK_ID_DECLINE_RUN_CALL_COUNT', decimal_places=0, max_digits=26, null=True)),
                ('check_id_decline_run_call_freq', models.DecimalField(blank=True, db_column='CHECK_ID_DECLINE_RUN_CALL_FREQ', decimal_places=4, max_digits=30, null=True)),
                ('check_id_decline_reason_no_id_verify_freq', models.DecimalField(blank=True, db_column='CHECK_ID_DECLINE_REASON_NO_ID_VERIFY_FREQ', decimal_places=4, max_digits=27, null=True)),
                ('check_id_decline_reason_no_valid_id_freq', models.DecimalField(blank=True, db_column='CHECK_ID_DECLINE_REASON_NO_VALID_ID_FREQ', decimal_places=4, max_digits=27, null=True)),
                ('check_id_no_scan_reason_declined_scan_freq', models.DecimalField(blank=True, db_column='CHECK_ID_NO_SCAN_REASON_DECLINED_SCAN_FREQ', decimal_places=4, max_digits=27, null=True)),
                ('check_id_no_scan_reason_scan_failed_freq', models.DecimalField(blank=True, db_column='CHECK_ID_NO_SCAN_REASON_SCAN_FAILED_FREQ', decimal_places=4, max_digits=27, null=True)),
                ('check_id_alt_id_no_dl_count', models.DecimalField(blank=True, db_column='CHECK_ID_ALT_ID_NO_DL_COUNT', decimal_places=0, max_digits=27, null=True)),
                ('check_id_no_scan_reason_id_check_fail_freq', models.DecimalField(blank=True, db_column='CHECK_ID_NO_SCAN_REASON_ID_CHECK_FAIL_FREQ', decimal_places=4, max_digits=29, null=True)),
                ('check_id_alt_id_no_dl_freq', models.DecimalField(blank=True, db_column='CHECK_ID_ALT_ID_NO_DL_FREQ', decimal_places=4, max_digits=31, null=True)),
                ('check_id_declined_reason_gone_on_arrival_freq', models.DecimalField(blank=True, db_column='CHECK_ID_DECLINED_REASON_GONE_ON_ARRIVAL_FREQ', decimal_places=4, max_digits=27, null=True)),
                ('check_id_declined_reason_no_name_match_freq', models.FloatField(blank=True, db_column='CHECK_ID_DECLINED_REASON_NO_NAME_MATCH_FREQ', null=True)),
                ('check_id_ran_call_with_no_id_freq', models.DecimalField(blank=True, db_column='CHECK_ID_RAN_CALL_WITH_NO_ID_FREQ', decimal_places=4, max_digits=29, null=True)),
                ('check_id_scan_screen_used_freq', models.DecimalField(blank=True, db_column='CHECK_ID_SCAN_SCREEN_USED_FREQ', decimal_places=4, max_digits=29, null=True)),
                ('check_id_ran_call_no_id_reason_other_freq', models.DecimalField(blank=True, db_column='CHECK_ID_RAN_CALL_NO_ID_REASON_OTHER_FREQ', decimal_places=4, max_digits=27, null=True)),
                ('check_id_ran_call_no_id_reason_safety_freq', models.DecimalField(blank=True, db_column='CHECK_ID_RAN_CALL_NO_ID_REASON_SAFETY_FREQ', decimal_places=4, max_digits=27, null=True)),
                ('check_id_no_scan_showed_valid_id_freq', models.DecimalField(blank=True, db_column='CHECK_ID_NO_SCAN_SHOWED_VALID_ID_FREQ', decimal_places=4, max_digits=29, null=True)),
                ('check_id_no_scan_showed_id_drivers_license_freq', models.DecimalField(blank=True, db_column='CHECK_ID_NO_SCAN_SHOWED_ID_DRIVERS_LICENSE_FREQ', decimal_places=4, max_digits=27, null=True)),
                ('check_id_no_scan_showed_id_other_govt_freq', models.DecimalField(blank=True, db_column='CHECK_ID_NO_SCAN_SHOWED_ID_OTHER_GOVT_FREQ', decimal_places=4, max_digits=27, null=True)),
                ('check_id_no_scan_showed_id_registration_freq', models.DecimalField(blank=True, db_column='CHECK_ID_NO_SCAN_SHOWED_ID_REGISTRATION_FREQ', decimal_places=4, max_digits=27, null=True)),
                ('check_id_no_scan_showed_id_military_freq', models.DecimalField(blank=True, db_column='CHECK_ID_NO_SCAN_SHOWED_ID_MILITARY_FREQ', decimal_places=4, max_digits=27, null=True)),
                ('check_id_no_scan_showed_id_passport_freq', models.DecimalField(blank=True, db_column='CHECK_ID_NO_SCAN_SHOWED_ID_PASSPORT_FREQ', decimal_places=4, max_digits=27, null=True)),
                ('check_id_no_scan_showed_id_foreign_freq', models.DecimalField(blank=True, db_column='CHECK_ID_NO_SCAN_SHOWED_ID_FOREIGN_FREQ', decimal_places=4, max_digits=27, null=True)),
                ('failed_batt_test_on_batt_call', models.DecimalField(blank=True, db_column='FAILED_BATT_TEST_ON_BATT_CALL', decimal_places=0, max_digits=24, null=True)),
                ('facility_type', models.CharField(blank=True, db_column='FACILITY_TYPE', max_length=255, null=True)),
                ('aaa_mgmt_any_facility_sat_avg', models.FloatField(blank=True, db_column='AAA_MGMT_ANY_FACILITY_SAT_AVG', null=True)),
                ('aaa_mgmt_any_facility_sat_count', models.BigIntegerField(blank=True, db_column='AAA_MGMT_ANY_FACILITY_SAT_COUNT', null=True)),
                ('aaa_mgmt_any_facility_sat_sum', models.FloatField(blank=True, db_column='AAA_MGMT_ANY_FACILITY_SAT_SUM', null=True)),
                ('aaa_mgmt_any_kept_informed_sat_avg', models.FloatField(blank=True, db_column='AAA_MGMT_ANY_KEPT_INFORMED_SAT_AVG', null=True)),
                ('aaa_mgmt_any_kept_informed_sat_count', models.BigIntegerField(blank=True, db_column='AAA_MGMT_ANY_KEPT_INFORMED_SAT_COUNT', null=True)),
                ('aaa_mgmt_any_kept_informed_sat_sum', models.FloatField(blank=True, db_column='AAA_MGMT_ANY_KEPT_INFORMED_SAT_SUM', null=True)),
                ('aaa_mgmt_any_overall_sat_avg', models.FloatField(blank=True, db_column='AAA_MGMT_ANY_OVERALL_SAT_AVG', null=True)),
                ('aaa_mgmt_any_overall_sat_count', models.BigIntegerField(blank=True, db_column='AAA_MGMT_ANY_OVERALL_SAT_COUNT', null=True)),
                ('aaa_mgmt_any_overall_sat_sum', models.BigIntegerField(blank=True, db_column='AAA_MGMT_ANY_OVERALL_SAT_SUM', null=True)),
                ('aaa_mgmt_any_request_service_sat_avg', models.FloatField(blank=True, db_column='AAA_MGMT_ANY_REQUEST_SERVICE_SAT_AVG', null=True)),
                ('aaa_mgmt_any_request_service_sat_count', models.BigIntegerField(blank=True, db_column='AAA_MGMT_ANY_REQUEST_SERVICE_SAT_COUNT', null=True)),
                ('aaa_mgmt_any_request_service_sat_sum', models.FloatField(blank=True, db_column='AAA_MGMT_ANY_REQUEST_SERVICE_SAT_SUM', null=True)),
                ('aaa_mgmt_any_response_sat_avg', models.FloatField(blank=True, db_column='AAA_MGMT_ANY_RESPONSE_SAT_AVG', null=True)),
                ('aaa_mgmt_any_response_sat_count', models.BigIntegerField(blank=True, db_column='AAA_MGMT_ANY_RESPONSE_SAT_COUNT', null=True)),
                ('aaa_mgmt_any_response_sat_sum', models.FloatField(blank=True, db_column='AAA_MGMT_ANY_RESPONSE_SAT_SUM', null=True)),
                ('aaa_mgmt_battery_facility_sat_avg', models.FloatField(blank=True, db_column='AAA_MGMT_BATTERY_FACILITY_SAT_AVG', null=True)),
                ('aaa_mgmt_battery_facility_sat_count', models.BigIntegerField(blank=True, db_column='AAA_MGMT_BATTERY_FACILITY_SAT_COUNT', null=True)),
                ('aaa_mgmt_battery_facility_sat_sum', models.FloatField(blank=True, db_column='AAA_MGMT_BATTERY_FACILITY_SAT_SUM', null=True)),
                ('aaa_mgmt_battery_kept_informed_sat_avg', models.FloatField(blank=True, db_column='AAA_MGMT_BATTERY_KEPT_INFORMED_SAT_AVG', null=True)),
                ('aaa_mgmt_battery_kept_informed_sat_count', models.BigIntegerField(blank=True, db_column='AAA_MGMT_BATTERY_KEPT_INFORMED_SAT_COUNT', null=True)),
                ('aaa_mgmt_battery_kept_informed_sat_sum', models.FloatField(blank=True, db_column='AAA_MGMT_BATTERY_KEPT_INFORMED_SAT_SUM', null=True)),
                ('aaa_mgmt_battery_overall_sat_avg', models.FloatField(blank=True, db_column='AAA_MGMT_BATTERY_OVERALL_SAT_AVG', null=True)),
                ('aaa_mgmt_battery_overall_sat_count', models.BigIntegerField(blank=True, db_column='AAA_MGMT_BATTERY_OVERALL_SAT_COUNT', null=True)),
                ('aaa_mgmt_battery_overall_sat_sum', models.BigIntegerField(blank=True, db_column='AAA_MGMT_BATTERY_OVERALL_SAT_SUM', null=True)),
                ('aaa_mgmt_battery_request_service_sat_avg', models.FloatField(blank=True, db_column='AAA_MGMT_BATTERY_REQUEST_SERVICE_SAT_AVG', null=True)),
                ('aaa_mgmt_battery_request_service_sat_count', models.BigIntegerField(blank=True, db_column='AAA_MGMT_BATTERY_REQUEST_SERVICE_SAT_COUNT', null=True)),
                ('aaa_mgmt_battery_request_service_sat_sum', models.FloatField(blank=True, db_column='AAA_MGMT_BATTERY_REQUEST_SERVICE_SAT_SUM', null=True)),
                ('aaa_mgmt_battery_response_sat_avg', models.FloatField(blank=True, db_column='AAA_MGMT_BATTERY_RESPONSE_SAT_AVG', null=True)),
                ('aaa_mgmt_battery_response_sat_count', models.BigIntegerField(blank=True, db_column='AAA_MGMT_BATTERY_RESPONSE_SAT_COUNT', null=True)),
                ('aaa_mgmt_battery_response_sat_sum', models.FloatField(blank=True, db_column='AAA_MGMT_BATTERY_RESPONSE_SAT_SUM', null=True)),
                ('aaa_mgmt_not_tow_facility_sat_avg', models.FloatField(blank=True, db_column='AAA_MGMT_NOT_TOW_FACILITY_SAT_AVG', null=True)),
                ('aaa_mgmt_not_tow_facility_sat_count', models.BigIntegerField(blank=True, db_column='AAA_MGMT_NOT_TOW_FACILITY_SAT_COUNT', null=True)),
                ('aaa_mgmt_not_tow_facility_sat_sum', models.FloatField(blank=True, db_column='AAA_MGMT_NOT_TOW_FACILITY_SAT_SUM', null=True)),
                ('aaa_mgmt_not_tow_kept_informed_sat_avg', models.FloatField(blank=True, db_column='AAA_MGMT_NOT_TOW_KEPT_INFORMED_SAT_AVG', null=True)),
                ('aaa_mgmt_not_tow_kept_informed_sat_count', models.BigIntegerField(blank=True, db_column='AAA_MGMT_NOT_TOW_KEPT_INFORMED_SAT_COUNT', null=True)),
                ('aaa_mgmt_not_tow_kept_informed_sat_sum', models.FloatField(blank=True, db_column='AAA_MGMT_NOT_TOW_KEPT_INFORMED_SAT_SUM', null=True)),
                ('duplicate_sum', models.IntegerField(blank=True, db_column='DUPLICATE_SUM', null=True)),
                ('duplicate_freq', models.FloatField(blank=True, db_column='DUPLICATE_AVG', null=True)),
                ('reroute_360_sum', models.IntegerField(blank=True, db_column='REROUTE_360_SUM', null=True)),
                ('reroute_360_freq', models.FloatField(blank=True, db_column='REROUTE_360_AVG', null=True)),
                ('sister_reroute_sum', models.IntegerField(blank=True, db_column='SISTER_REROUTE_SUM', null=True)),
                ('sister_reroute_freq', models.FloatField(blank=True, db_column='SISTER_REROUTE_AVG', null=True)),
                ('first_spot_delay_sum', models.IntegerField(blank=True, db_column='FIRST_SPOT_DELAY_SUM', null=True)),
                ('first_spot_delay_freq', models.FloatField(blank=True, db_column='FIRST_SPOT_DELAY_AVG', null=True)),
                ('reroute_sum', models.IntegerField(blank=True, db_column='REROUTE_SUM', null=True)),
                ('reroute_avg', models.FloatField(blank=True, db_column='REROUTE_AVG', null=True)),
                ('survey_count', models.BigIntegerField(blank=True, db_column='SURVEY_COUNT', null=True)),
                ('aaa_mgmt_not_tow_overall_sat_avg', models.FloatField(blank=True, db_column='AAA_MGMT_NOT_TOW_OVERALL_SAT_AVG', null=True)),
                ('aaa_mgmt_not_tow_overall_sat_count', models.BigIntegerField(blank=True, db_column='AAA_MGMT_NOT_TOW_OVERALL_SAT_COUNT', null=True)),
                ('aaa_mgmt_not_tow_overall_sat_sum', models.BigIntegerField(blank=True, db_column='AAA_MGMT_NOT_TOW_OVERALL_SAT_SUM', null=True)),
                ('aaa_mgmt_not_tow_request_service_sat_avg', models.FloatField(blank=True, db_column='AAA_MGMT_NOT_TOW_REQUEST_SERVICE_SAT_AVG', null=True)),
                ('aaa_mgmt_not_tow_request_service_sat_count', models.BigIntegerField(blank=True, db_column='AAA_MGMT_NOT_TOW_REQUEST_SERVICE_SAT_COUNT', null=True)),
                ('aaa_mgmt_not_tow_request_service_sat_sum', models.FloatField(blank=True, db_column='AAA_MGMT_NOT_TOW_REQUEST_SERVICE_SAT_SUM', null=True)),
                ('aaa_mgmt_not_tow_response_sat_avg', models.FloatField(blank=True, db_column='AAA_MGMT_NOT_TOW_RESPONSE_SAT_AVG', null=True)),
                ('aaa_mgmt_not_tow_response_sat_count', models.BigIntegerField(blank=True, db_column='AAA_MGMT_NOT_TOW_RESPONSE_SAT_COUNT', null=True)),
                ('aaa_mgmt_not_tow_response_sat_sum', models.FloatField(blank=True, db_column='AAA_MGMT_NOT_TOW_RESPONSE_SAT_SUM', null=True)),
                ('aaa_mgmt_tow_facility_sat_avg', models.FloatField(blank=True, db_column='AAA_MGMT_TOW_FACILITY_SAT_AVG', null=True)),
                ('aaa_mgmt_tow_facility_sat_count', models.BigIntegerField(blank=True, db_column='AAA_MGMT_TOW_FACILITY_SAT_COUNT', null=True)),
                ('aaa_mgmt_tow_facility_sat_sum', models.FloatField(blank=True, db_column='AAA_MGMT_TOW_FACILITY_SAT_SUM', null=True)),
                ('aaa_mgmt_tow_kept_informed_sat_avg', models.FloatField(blank=True, db_column='AAA_MGMT_TOW_KEPT_INFORMED_SAT_AVG', null=True)),
                ('aaa_mgmt_tow_kept_informed_sat_count', models.BigIntegerField(blank=True, db_column='AAA_MGMT_TOW_KEPT_INFORMED_SAT_COUNT', null=True)),
                ('aaa_mgmt_tow_kept_informed_sat_sum', models.FloatField(blank=True, db_column='AAA_MGMT_TOW_KEPT_INFORMED_SAT_SUM', null=True)),
                ('aaa_mgmt_tow_overall_sat_avg', models.FloatField(blank=True, db_column='AAA_MGMT_TOW_OVERALL_SAT_AVG', null=True)),
                ('aaa_mgmt_tow_overall_sat_count', models.BigIntegerField(blank=True, db_column='AAA_MGMT_TOW_OVERALL_SAT_COUNT', null=True)),
                ('aaa_mgmt_tow_overall_sat_sum', models.BigIntegerField(blank=True, db_column='AAA_MGMT_TOW_OVERALL_SAT_SUM', null=True)),
                ('aaa_mgmt_tow_request_service_sat_avg', models.FloatField(blank=True, db_column='AAA_MGMT_TOW_REQUEST_SERVICE_SAT_AVG', null=True)),
                ('aaa_mgmt_tow_request_service_sat_count', models.BigIntegerField(blank=True, db_column='AAA_MGMT_TOW_REQUEST_SERVICE_SAT_COUNT', null=True)),
                ('aaa_mgmt_tow_request_service_sat_sum', models.FloatField(blank=True, db_column='AAA_MGMT_TOW_REQUEST_SERVICE_SAT_SUM', null=True)),
                ('aaa_mgmt_tow_response_sat_avg', models.FloatField(blank=True, db_column='AAA_MGMT_TOW_RESPONSE_SAT_AVG', null=True)),
                ('aaa_mgmt_tow_response_sat_count', models.BigIntegerField(blank=True, db_column='AAA_MGMT_TOW_RESPONSE_SAT_COUNT', null=True)),
                ('aaa_mgmt_tow_response_sat_sum', models.FloatField(blank=True, db_column='AAA_MGMT_TOW_RESPONSE_SAT_SUM', null=True)),
                ('comp_any_facility_sat_avg', models.FloatField(blank=True, db_column='COMP_ANY_FACILITY_SAT_AVG', null=True)),
                ('comp_any_facility_sat_count', models.BigIntegerField(blank=True, db_column='COMP_ANY_FACILITY_SAT_COUNT', null=True)),
                ('comp_any_facility_sat_sum', models.FloatField(blank=True, db_column='COMP_ANY_FACILITY_SAT_SUM', null=True)),
                ('comp_any_kept_informed_sat_avg', models.FloatField(blank=True, db_column='COMP_ANY_KEPT_INFORMED_SAT_AVG', null=True)),
                ('comp_any_kept_informed_sat_count', models.BigIntegerField(blank=True, db_column='COMP_ANY_KEPT_INFORMED_SAT_COUNT', null=True)),
                ('comp_any_kept_informed_sat_sum', models.FloatField(blank=True, db_column='COMP_ANY_KEPT_INFORMED_SAT_SUM', null=True)),
                ('comp_any_overall_sat_avg', models.FloatField(blank=True, db_column='COMP_ANY_OVERALL_SAT_AVG', null=True)),
                ('comp_any_overall_sat_count', models.BigIntegerField(blank=True, db_column='COMP_ANY_OVERALL_SAT_COUNT', null=True)),
                ('comp_any_overall_sat_sum', models.BigIntegerField(blank=True, db_column='COMP_ANY_OVERALL_SAT_SUM', null=True)),
                ('comp_any_request_service_sat_avg', models.FloatField(blank=True, db_column='COMP_ANY_REQUEST_SERVICE_SAT_AVG', null=True)),
                ('comp_any_request_service_sat_count', models.BigIntegerField(blank=True, db_column='COMP_ANY_REQUEST_SERVICE_SAT_COUNT', null=True)),
                ('comp_any_request_service_sat_sum', models.FloatField(blank=True, db_column='COMP_ANY_REQUEST_SERVICE_SAT_SUM', null=True)),
                ('comp_any_response_sat_avg', models.FloatField(blank=True, db_column='COMP_ANY_RESPONSE_SAT_AVG', null=True)),
                ('comp_any_response_sat_count', models.BigIntegerField(blank=True, db_column='COMP_ANY_RESPONSE_SAT_COUNT', null=True)),
                ('comp_any_response_sat_sum', models.FloatField(blank=True, db_column='COMP_ANY_RESPONSE_SAT_SUM', null=True)),
                ('comp_battery_facility_sat_avg', models.FloatField(blank=True, db_column='COMP_BATTERY_FACILITY_SAT_AVG', null=True)),
                ('comp_battery_facility_sat_count', models.BigIntegerField(blank=True, db_column='COMP_BATTERY_FACILITY_SAT_COUNT', null=True)),
                ('comp_battery_facility_sat_sum', models.FloatField(blank=True, db_column='COMP_BATTERY_FACILITY_SAT_SUM', null=True)),
                ('comp_battery_kept_informed_sat_avg', models.FloatField(blank=True, db_column='COMP_BATTERY_KEPT_INFORMED_SAT_AVG', null=True)),
                ('comp_battery_kept_informed_sat_count', models.BigIntegerField(blank=True, db_column='COMP_BATTERY_KEPT_INFORMED_SAT_COUNT', null=True)),
                ('comp_battery_kept_informed_sat_sum', models.FloatField(blank=True, db_column='COMP_BATTERY_KEPT_INFORMED_SAT_SUM', null=True)),
                ('comp_battery_overall_sat_avg', models.FloatField(blank=True, db_column='COMP_BATTERY_OVERALL_SAT_AVG', null=True)),
                ('comp_battery_overall_sat_count', models.BigIntegerField(blank=True, db_column='COMP_BATTERY_OVERALL_SAT_COUNT', null=True)),
                ('comp_battery_overall_sat_sum', models.BigIntegerField(blank=True, db_column='COMP_BATTERY_OVERALL_SAT_SUM', null=True)),
                ('comp_battery_request_service_sat_avg', models.FloatField(blank=True, db_column='COMP_BATTERY_REQUEST_SERVICE_SAT_AVG', null=True)),
                ('comp_battery_request_service_sat_count', models.BigIntegerField(blank=True, db_column='COMP_BATTERY_REQUEST_SERVICE_SAT_COUNT', null=True)),
                ('comp_battery_request_service_sat_sum', models.FloatField(blank=True, db_column='COMP_BATTERY_REQUEST_SERVICE_SAT_SUM', null=True)),
                ('comp_battery_response_sat_avg', models.FloatField(blank=True, db_column='COMP_BATTERY_RESPONSE_SAT_AVG', null=True)),
                ('comp_battery_response_sat_count', models.BigIntegerField(blank=True, db_column='COMP_BATTERY_RESPONSE_SAT_COUNT', null=True)),
                ('comp_battery_response_sat_sum', models.FloatField(blank=True, db_column='COMP_BATTERY_RESPONSE_SAT_SUM', null=True)),
                ('comp_not_tow_facility_sat_avg', models.FloatField(blank=True, db_column='COMP_NOT_TOW_FACILITY_SAT_AVG', null=True)),
                ('comp_not_tow_facility_sat_count', models.BigIntegerField(blank=True, db_column='COMP_NOT_TOW_FACILITY_SAT_COUNT', null=True)),
                ('comp_not_tow_facility_sat_sum', models.FloatField(blank=True, db_column='COMP_NOT_TOW_FACILITY_SAT_SUM', null=True)),
                ('comp_not_tow_kept_informed_sat_avg', models.FloatField(blank=True, db_column='COMP_NOT_TOW_KEPT_INFORMED_SAT_AVG', null=True)),
                ('comp_not_tow_kept_informed_sat_count', models.BigIntegerField(blank=True, db_column='COMP_NOT_TOW_KEPT_INFORMED_SAT_COUNT', null=True)),
                ('comp_not_tow_kept_informed_sat_sum', models.FloatField(blank=True, db_column='COMP_NOT_TOW_KEPT_INFORMED_SAT_SUM', null=True)),
                ('comp_not_tow_overall_sat_avg', models.FloatField(blank=True, db_column='COMP_NOT_TOW_OVERALL_SAT_AVG', null=True)),
                ('comp_not_tow_overall_sat_count', models.BigIntegerField(blank=True, db_column='COMP_NOT_TOW_OVERALL_SAT_COUNT', null=True)),
                ('comp_not_tow_overall_sat_sum', models.BigIntegerField(blank=True, db_column='COMP_NOT_TOW_OVERALL_SAT_SUM', null=True)),
                ('comp_not_tow_request_service_sat_avg', models.FloatField(blank=True, db_column='COMP_NOT_TOW_REQUEST_SERVICE_SAT_AVG', null=True)),
                ('comp_not_tow_request_service_sat_count', models.BigIntegerField(blank=True, db_column='COMP_NOT_TOW_REQUEST_SERVICE_SAT_COUNT', null=True)),
                ('comp_not_tow_request_service_sat_sum', models.FloatField(blank=True, db_column='COMP_NOT_TOW_REQUEST_SERVICE_SAT_SUM', null=True)),
                ('comp_not_tow_response_sat_avg', models.FloatField(blank=True, db_column='COMP_NOT_TOW_RESPONSE_SAT_AVG', null=True)),
                ('comp_not_tow_response_sat_count', models.BigIntegerField(blank=True, db_column='COMP_NOT_TOW_RESPONSE_SAT_COUNT', null=True)),
                ('comp_not_tow_response_sat_sum', models.FloatField(blank=True, db_column='COMP_NOT_TOW_RESPONSE_SAT_SUM', null=True)),
                ('comp_tow_facility_sat_avg', models.FloatField(blank=True, db_column='COMP_TOW_FACILITY_SAT_AVG', null=True)),
                ('comp_tow_facility_sat_count', models.BigIntegerField(blank=True, db_column='COMP_TOW_FACILITY_SAT_COUNT', null=True)),
                ('comp_tow_facility_sat_sum', models.FloatField(blank=True, db_column='COMP_TOW_FACILITY_SAT_SUM', null=True)),
                ('comp_tow_kept_informed_sat_avg', models.FloatField(blank=True, db_column='COMP_TOW_KEPT_INFORMED_SAT_AVG', null=True)),
                ('comp_tow_kept_informed_sat_count', models.BigIntegerField(blank=True, db_column='COMP_TOW_KEPT_INFORMED_SAT_COUNT', null=True)),
                ('comp_tow_kept_informed_sat_sum', models.FloatField(blank=True, db_column='COMP_TOW_KEPT_INFORMED_SAT_SUM', null=True)),
                ('comp_tow_overall_sat_avg', models.FloatField(blank=True, db_column='COMP_TOW_OVERALL_SAT_AVG', null=True)),
                ('comp_tow_overall_sat_count', models.BigIntegerField(blank=True, db_column='COMP_TOW_OVERALL_SAT_COUNT', null=True)),
                ('comp_tow_overall_sat_sum', models.BigIntegerField(blank=True, db_column='COMP_TOW_OVERALL_SAT_SUM', null=True)),
                ('comp_tow_request_service_sat_avg', models.FloatField(blank=True, db_column='COMP_TOW_REQUEST_SERVICE_SAT_AVG', null=True)),
                ('comp_tow_request_service_sat_count', models.BigIntegerField(blank=True, db_column='COMP_TOW_REQUEST_SERVICE_SAT_COUNT', null=True)),
                ('comp_tow_request_service_sat_sum', models.FloatField(blank=True, db_column='COMP_TOW_REQUEST_SERVICE_SAT_SUM', null=True)),
                ('comp_tow_response_sat_avg', models.FloatField(blank=True, db_column='COMP_TOW_RESPONSE_SAT_AVG', null=True)),
                ('comp_tow_response_sat_count', models.BigIntegerField(blank=True, db_column='COMP_TOW_RESPONSE_SAT_COUNT', null=True)),
                ('comp_tow_response_sat_sum', models.FloatField(blank=True, db_column='COMP_TOW_RESPONSE_SAT_SUM', null=True)),
            ],
            options={
                'db_table': 'dashboard_aggregations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Std12EExtraCols',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sc_dt_surveys', models.DateTimeField(blank=True, db_column='SC_DT_surveys', null=True)),
                ('sc_id_surveys', models.BigIntegerField(blank=True, db_column='SC_ID_surveys', null=True)),
                ('aar_fac_id', models.TextField(blank=True, db_column='AAR_FAC_ID', null=True)),
                ('aar_fac_name', models.TextField(blank=True, db_column='AAR_FAC_NAME', null=True)),
                ('aar_or_co_fac_indic', models.TextField(blank=True, db_column='AAR_OR_CO_FAC_INDIC', null=True)),
                ('accd_insur', models.TextField(blank=True, db_column='ACCD_INSUR', null=True)),
                ('aces_b_veh_id', models.TextField(blank=True, db_column='ACES_B_VEH_ID', null=True)),
                ('alt_tow_dest', models.TextField(blank=True, db_column='ALT_TOW_DEST', null=True)),
                ('aqs12_eli', models.TextField(blank=True, db_column='AQS12_ELI', null=True)),
                ('ba_dol', models.TextField(blank=True, db_column='BA_DOL', null=True)),
                ('can_ser_ind', models.TextField(blank=True, db_column='CAN_SER_IND', null=True)),
                ('cas_cll_ind', models.TextField(blank=True, db_column='CAS_CLL_IND', null=True)),
                ('cc_amt', models.FloatField(blank=True, db_column='CC_AMT', null=True)),
                ('chg_entitlement', models.TextField(blank=True, db_column='CHG_ENTITLEMENT', null=True)),
                ('chrg_entitlement', models.TextField(blank=True, db_column='CHRG_ENTITLEMENT', null=True)),
                ('clb_opt_fld_1', models.TextField(blank=True, db_column='CLB_OPT_FLD_1', null=True)),
                ('clb_opt_fld_2', models.TextField(blank=True, db_column='CLB_OPT_FLD_2', null=True)),
                ('clb_opt_fld_3', models.TextField(blank=True, db_column='CLB_OPT_FLD_3', null=True)),
                ('clb_opt_fld_4', models.TextField(blank=True, db_column='CLB_OPT_FLD_4', null=True)),
                ('clb_opt_fld_5', models.TextField(blank=True, db_column='CLB_OPT_FLD_5', null=True)),
                ('ers_cc_id', models.TextField(blank=True, db_column='ERS_CC_ID', null=True)),
                ('ers_cc_role', models.TextField(blank=True, db_column='ERS_CC_ROLE', null=True)),
                ('ers_reimb', models.TextField(blank=True, db_column='ERS_Reimb', null=True)),
                ('ers_ser_rec', models.TextField(blank=True, db_column='ERS_SER_REC', null=True)),
                ('hm_lkout', models.TextField(blank=True, db_column='HM_LKOUT', null=True)),
                ('itu_bbt', models.TextField(blank=True, db_column='ITU_BBT', null=True)),
                ('itu_nav', models.TextField(blank=True, db_column='ITU_NAV', null=True)),
                ('itu_odb2', models.TextField(blank=True, db_column='ITU_ODB2', null=True)),
                ('ivr_aqs12_eli', models.TextField(blank=True, db_column='IVR_AQS12_ELI', null=True)),
                ('ivr_requested', models.TextField(blank=True, db_column='IVR_REQUESTED', null=True)),
                ('network_pvd', models.TextField(blank=True, db_column='NETWORK_PVD', null=True)),
                ('ob_bc_scanner', models.TextField(blank=True, db_column='OB_BC_SCANNER', null=True)),
                ('ob_printer', models.TextField(blank=True, db_column='OB_PRINTER', null=True)),
                ('odb_pos', models.TextField(blank=True, db_column='ODB_POS', null=True)),
                ('otg_sol_code', models.TextField(blank=True, db_column='OTG_SOL_CODE', null=True)),
                ('oth_dol', models.TextField(blank=True, db_column='OTH_DOL', null=True)),
                ('pl_dol', models.TextField(blank=True, db_column='PL_DOL', null=True)),
                ('prim_rpr_perfda', models.TextField(blank=True, db_column='PRIM_RPR_PERFDA', null=True)),
                ('prim_rpr_perfdb', models.TextField(blank=True, db_column='PRIM_RPR_PERFDB', null=True)),
                ('rap_ind', models.TextField(blank=True, db_column='RAP_IND', null=True)),
                ('rpst_dt', models.TextField(blank=True, db_column='RPST_DT', null=True)),
                ('rpst_trained', models.TextField(blank=True, db_column='RPST_TRAINED', null=True)),
                ('rv_dol', models.TextField(blank=True, db_column='RV_DOL', null=True)),
                ('sc_cl_dttm', models.DateTimeField(blank=True, db_column='SC_CL_DTTM', null=True)),
                ('sc_disposition', models.TextField(blank=True, db_column='SC_DISPOSITION', null=True)),
                ('sc_di_dttm', models.DateTimeField(blank=True, db_column='SC_DI_DTTM', null=True)),
                ('sc_lst_di_dttm', models.DateTimeField(blank=True, db_column='SC_LST_DI_DTTM', null=True)),
                ('sc_ls_or_tw_cd', models.TextField(blank=True, db_column='SC_LS_OR_TW_CD', null=True)),
                ('sc_mbr_cb_ph_cl', models.TextField(blank=True, db_column='SC_MBR_CB_PH_CL', null=True)),
                ('sc_miles_tw', models.TextField(blank=True, db_column='SC_MILES_TW', null=True)),
                ('sc_mob_diag_cd', models.TextField(blank=True, db_column='SC_MOB_DIAG_CD', null=True)),
                ('sc_res_cd2', models.TextField(blank=True, db_column='SC_RES_CD2', null=True)),
                ('sc_rev_ls_or_tw_cd', models.TextField(blank=True, db_column='SC_REV_LS_OR_TW_CD', null=True)),
                ('sc_rso', models.TextField(blank=True, db_column='SC_RSO', null=True)),
                ('sc_tw_dttm', models.DateTimeField(blank=True, db_column='SC_TW_DTTM', null=True)),
                ('sc_veh_manfr_nm', models.TextField(blank=True, db_column='SC_VEH_MANFR_NM', null=True)),
                ('sc_veh_manf_yr_dt', models.TextField(blank=True, db_column='SC_VEH_MANF_YR_DT', null=True)),
                ('sc_veh_mdl_nm', models.TextField(blank=True, db_column='SC_VEH_MDL_NM', null=True)),
                ('sc_veh_type', models.TextField(blank=True, db_column='SC_VEH_TYPE', null=True)),
                ('sday_ssvc', models.TextField(blank=True, db_column='SDAY_SSVC', null=True)),
            ],
            options={
                'db_table': 'std12e_extra_cols',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Std12EReduced',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('associate_count', models.BigIntegerField(blank=True, db_column='ASSOCIATE_COUNT', null=True)),
                ('associate_id', models.TextField(blank=True, db_column='ASSOCIATE_ID', null=True)),
                ('ata', models.DecimalField(blank=True, db_column='ATA', decimal_places=1, max_digits=22, null=True)),
                ('ata_minus_pta', models.FloatField(blank=True, db_column='ATA_MINUS_PTA', null=True)),
                ('accreditation', models.CharField(blank=True, db_column='Accreditation', max_length=255, null=True)),
                ('age_group', models.TextField(blank=True, db_column='Age_Group', null=True)),
                ('base_cost', models.FloatField(blank=True, db_column='BASE_COST', null=True)),
                ('battery_test', models.BigIntegerField(blank=True, db_column='BATTERY_TEST', null=True)),
                ('batt_svc_veh_disp_ind', models.TextField(blank=True, db_column='BATT_SVC_VEH_DISP_IND', null=True)),
                ('batt_test_on_batt_call', models.IntegerField(blank=True, db_column='BATT_TEST_ON_BATT_CALL', null=True)),
                ('bl_home_indic', models.TextField(blank=True, db_column='BL_HOME_INDIC', null=True)),
                ('bl_lat', models.FloatField(blank=True, db_column='BL_LAT', null=True)),
                ('bl_long', models.FloatField(blank=True, db_column='BL_LONG', null=True)),
                ('bl_near_cty_nm', models.CharField(blank=True, db_column='BL_NEAR_CTY_NM', max_length=255, null=True)),
                ('bl_state_cd', models.TextField(blank=True, db_column='BL_STATE_CD', null=True)),
                ('booth', models.CharField(blank=True, db_column='BOOTH', max_length=255, null=True)),
                ('battery_service_type', models.TextField(blank=True, db_column='Battery_Service_Type', null=True)),
                ('call_accepted', models.IntegerField(blank=True, db_column='CALL_ACCEPTED', null=True)),
                ('call_center', models.TextField(blank=True, db_column='CALL_CENTER', null=True)),
                ('call_center_group', models.CharField(blank=True, db_column='CALL_CENTER_GROUP', max_length=255, null=True)),
                ('call_center_operator', models.CharField(blank=True, db_column='CALL_CENTER_OPERATOR', max_length=255, null=True)),
                ('call_cost', models.FloatField(blank=True, db_column='CALL_COST', null=True)),
                ('call_mover', models.TextField(blank=True, db_column='CALL_MOVER', null=True)),
                ('cancelled', models.IntegerField(blank=True, db_column='CANCELLED', null=True)),
                ('check_id_check_fail', models.IntegerField(blank=True, db_column='CHECK_ID_CHECK_FAIL', null=True)),
                ('check_id_compliant', models.IntegerField(blank=True, db_column='CHECK_ID_COMPLIANT', null=True)),
                ('check_id_decline_reason_with_id', models.CharField(blank=True, db_column='CHECK_ID_DECLINE_REASON_WITH_ID', max_length=255, null=True)),
                ('check_id_id', models.BigIntegerField(blank=True, db_column='CHECK_ID_ID', null=True)),
                ('check_id_id_type', models.CharField(blank=True, db_column='CHECK_ID_ID_TYPE', max_length=255, null=True)),
                ('check_id_imei', models.CharField(blank=True, db_column='CHECK_ID_IMEI', max_length=255, null=True)),
                ('check_id_input_method', models.CharField(blank=True, db_column='CHECK_ID_INPUT_METHOD', max_length=255, null=True)),
                ('check_id_no_scan_reason', models.CharField(blank=True, db_column='CHECK_ID_NO_SCAN_REASON', max_length=255, null=True)),
                ('check_id_ran_call', models.IntegerField(blank=True, db_column='CHECK_ID_RAN_CALL', null=True)),
                ('check_id_ran_call_no_id_reason', models.CharField(blank=True, db_column='CHECK_ID_RAN_CALL_NO_ID_REASON', max_length=255, null=True)),
                ('check_id_showed_valid_id', models.IntegerField(blank=True, db_column='CHECK_ID_SHOWED_VALID_ID', null=True)),
                ('clear_time', models.DateTimeField(blank=True, db_column='CLEAR_TIME', null=True)),
                ('club', models.TextField(blank=True, db_column='CLUB', null=True)),
                ('club_group', models.TextField(blank=True, db_column='CLUB_GROUP', null=True)),
                ('club_name', models.TextField(blank=True, db_column='CLUB_NAME', null=True)),
                ('club_recode', models.TextField(blank=True, db_column='CLUB_RECODE', null=True)),
                ('club_surveys', models.TextField(blank=True, db_column='CLUB_surveys', null=True)),
                ('cl_pay_dt', models.TextField(blank=True, db_column='CL_PAY_DT', null=True)),
                ('cm_dispatch', models.BigIntegerField(blank=True, db_column='CM_DISPATCH', null=True)),
                ('cm_spp', models.BigIntegerField(blank=True, db_column='CM_SPP', null=True)),
                ('cm_trk', models.BigIntegerField(blank=True, db_column='CM_TRK', null=True)),
                ('col_cll', models.TextField(blank=True, db_column='COL_CLL', null=True)),
                ('comm_ctr_id', models.CharField(blank=True, db_column='COMM_CTR_ID', max_length=255, null=True)),
                ('con_acc_hwy', models.TextField(blank=True, db_column='CON_ACC_HWY', null=True)),
                ('co_dispatch', models.BigIntegerField(blank=True, db_column='CO_DISPATCH', null=True)),
                ('co_ext', models.BigIntegerField(blank=True, db_column='CO_EXT', null=True)),
                ('club_tier', models.TextField(blank=True, db_column='Club_Tier', null=True)),
                ('date_updated', models.DateTimeField(blank=True, db_column='DATE_UPDATED', null=True)),
                ('date_updated_surveys', models.DateTimeField(blank=True, db_column='DATE_UPDATED_surveys', null=True)),
                ('dispatch_communicated', models.IntegerField(blank=True, db_column='DISPATCH_COMMUNICATED', null=True)),
                ('disp_unit_type', models.TextField(blank=True, db_column='DISP_UNIT_TYPE', null=True)),
                ('driver_id', models.TextField(blank=True, db_column='DRIVER_ID', null=True)),
                ('driver_name', models.CharField(blank=True, db_column='DRIVER_NAME', max_length=255, null=True)),
                ('drv_id', models.FloatField(blank=True, db_column='DRV_ID', null=True)),
                ('dtl_prob_code', models.TextField(blank=True, db_column='DTL_PROB_CODE', null=True)),
                ('dup_as_srv_tck', models.TextField(blank=True, db_column='DUP_AS_SRV_TCK', null=True)),
                ('dup_call_id', models.TextField(blank=True, db_column='DUP_CALL_ID', null=True)),
                ('dup_cll_veh_chg', models.TextField(blank=True, db_column='DUP_CLL_VEH_CHG', null=True)),
                ('dup_svc_call_date', models.TextField(blank=True, db_column='DUP_SVC_CALL_DATE', null=True)),
                ('desc2', models.FloatField(blank=True, db_column='Desc2', null=True)),
                ('desc2_4_text', models.TextField(blank=True, db_column='Desc2_4_TEXT', null=True)),
                ('driver5', models.FloatField(blank=True, db_column='Driver5', null=True)),
                ('duration_in_seconds_field', models.FloatField(blank=True, db_column='Duration__in_seconds_', null=True)),
                ('early', models.IntegerField(blank=True, db_column='EARLY', null=True)),
                ('emp_call_center_operator', models.IntegerField(blank=True, db_column='EMP_CALL_CENTER_OPERATOR', null=True)),
                ('enroute_cost', models.FloatField(blank=True, db_column='ENROUTE_COST', null=True)),
                ('er_lat', models.FloatField(blank=True, db_column='ER_LAT', null=True)),
                ('er_long', models.FloatField(blank=True, db_column='ER_LONG', null=True)),
                ('er_miles', models.TextField(blank=True, db_column='ER_MILES', null=True)),
                ('eta', models.BigIntegerField(blank=True, db_column='ETA', null=True)),
                ('externalreference', models.TextField(blank=True, db_column='ExternalReference', null=True)),
                ('facility_sat', models.FloatField(blank=True, db_column='FACILITY_SAT', null=True)),
                ('fac_dir_call', models.TextField(blank=True, db_column='FAC_DIR_CALL', null=True)),
                ('fac_type', models.TextField(blank=True, db_column='FAC_TYPE', null=True)),
                ('failed_battery_test', models.BigIntegerField(blank=True, db_column='FAILED_BATTERY_TEST', null=True)),
                ('first_fac_type', models.CharField(blank=True, db_column='FIRST_FAC_TYPE', max_length=255, null=True)),
                ('fst_booth', models.TextField(blank=True, db_column='FST_BOOTH', null=True)),
                ('fst_ol_time', models.DateTimeField(blank=True, db_column='FST_OL_TIME', null=True)),
                ('fst_shop', models.CharField(blank=True, db_column='FST_SHOP', max_length=255, null=True)),
                ('fst_spot_time', models.DateTimeField(blank=True, db_column='FST_SPOT_TIME', null=True)),
                ('fst_tr_code', models.TextField(blank=True, db_column='FST_TR_CODE', null=True)),
                ('gps_ind', models.TextField(blank=True, db_column='GPS_IND', null=True)),
                ('grid_id', models.CharField(blank=True, db_column='GRID_ID', max_length=255, null=True)),
                ('grid_zipcode', models.CharField(blank=True, db_column='GRID_ZIPCODE', max_length=255, null=True)),
                ('g_to_g', models.IntegerField(blank=True, db_column='G_TO_G', null=True)),
                ('g_to_ng', models.IntegerField(blank=True, db_column='G_TO_NG', null=True)),
                ('heavy_user', models.FloatField(blank=True, db_column='HEAVY_USER', null=True)),
                ('invite_sc_dt', models.DateTimeField(blank=True, db_column='INVITE_SC_DT', null=True)),
                ('kept_informed_sat', models.FloatField(blank=True, db_column='KEPT_INFORMED_SAT', null=True)),
                ('late', models.IntegerField(blank=True, db_column='LATE', null=True)),
                ('long_ata', models.IntegerField(blank=True, db_column='LONG_ATA', null=True)),
                ('lst_spot_time', models.DateTimeField(blank=True, db_column='LST_SPOT_TIME', null=True)),
                ('match_key', models.CharField(blank=True, db_column='MATCH_KEY', max_length=255, null=True)),
                ('match_key_surveys', models.CharField(blank=True, db_column='MATCH_KEY_surveys', max_length=255, null=True)),
                ('mbr_complaint', models.TextField(blank=True, db_column='MBR_COMPLAINT', null=True)),
                ('mbr_compliment', models.TextField(blank=True, db_column='MBR_COMPLIMENT', null=True)),
                ('mbr_cty_nm', models.TextField(blank=True, db_column='MBR_CTY_NM', null=True)),
                ('mbr_join_dt', models.TextField(blank=True, db_column='MBR_JOIN_DT', null=True)),
                ('mbr_mbr_typ', models.TextField(blank=True, db_column='MBR_MBR_TYP', null=True)),
                ('mbr_pstl_cd', models.TextField(blank=True, db_column='MBR_PSTL_CD', null=True)),
                ('mbr_st_cd', models.TextField(blank=True, db_column='MBR_ST_CD', null=True)),
                ('miles_dest', models.FloatField(blank=True, db_column='MILES_DEST', null=True)),
                ('month', models.BigIntegerField(blank=True, db_column='MONTH', null=True)),
                ('ng_to_g', models.IntegerField(blank=True, db_column='NG_TO_G', null=True)),
                ('ng_to_ng', models.IntegerField(blank=True, db_column='NG_TO_NG', null=True)),
                ('nps', models.FloatField(blank=True, db_column='NPS', null=True)),
                ('nps_nps_group', models.FloatField(blank=True, db_column='NPS_NPS_GROUP', null=True)),
                ('nsr', models.IntegerField(blank=True, db_column='NSR', null=True)),
                ('nt_call_ind', models.TextField(blank=True, db_column='NT_CALL_IND', null=True)),
                ('n_mbr_ind', models.TextField(blank=True, db_column='N_MBR_IND', null=True)),
                ('on_time', models.IntegerField(blank=True, db_column='ON_TIME', null=True)),
                ('outside_communicated', models.IntegerField(blank=True, db_column='OUTSIDE_COMMUNICATED', null=True)),
                ('overall_sat', models.BigIntegerField(blank=True, db_column='OVERALL_SAT', null=True)),
                ('outc1', models.FloatField(blank=True, db_column='OutC1', null=True)),
                ('plus_ind', models.TextField(blank=True, db_column='PLUS_IND', null=True)),
                ('primary_key', models.BigIntegerField(blank=True, db_column='PRIMARY_KEY', null=True)),
                ('prim_bat_rider', models.TextField(blank=True, db_column='PRIM_BAT_RIDER', null=True)),
                ('promised_time', models.DateTimeField(blank=True, db_column='PROMISED_TIME', null=True)),
                ('pta', models.DecimalField(blank=True, db_column='PTA', decimal_places=1, max_digits=22, null=True)),
                ('q24', models.FloatField(blank=True, db_column='Q24', null=True)),
                ('q26', models.FloatField(blank=True, db_column='Q26', null=True)),
                ('q27', models.FloatField(blank=True, db_column='Q27', null=True)),
                ('q28', models.FloatField(blank=True, db_column='Q28', null=True)),
                ('q30', models.TextField(blank=True, db_column='Q30', null=True)),
                ('q_sc_dt', models.DateTimeField(blank=True, db_column='Q_SC_DT', null=True)),
                ('rec_ind', models.TextField(blank=True, db_column='REC_IND', null=True)),
                ('region', models.CharField(blank=True, db_column='REGION', max_length=255, null=True)),
                ('renewal_mnth', models.TextField(blank=True, db_column='RENEWAL_MNTH', null=True)),
                ('replaced_batt_on_failed_batt_call', models.IntegerField(blank=True, db_column='REPLACED_BATT_ON_FAILED_BATT_CALL', null=True)),
                ('request_service_sat', models.FloatField(blank=True, db_column='REQUEST_SERVICE_SAT', null=True)),
                ('resolution', models.TextField(blank=True, db_column='RESOLUTION', null=True)),
                ('resolution_desc', models.TextField(blank=True, db_column='RESOLUTION_DESC', null=True)),
                ('responserequests', models.TextField(blank=True, db_column='RESPONSERequests', null=True)),
                ('response_loc_req', models.TextField(blank=True, db_column='RESPONSE_LOC_REQ', null=True)),
                ('response_loc_used', models.TextField(blank=True, db_column='RESPONSE_LOC_USED', null=True)),
                ('response_reg', models.TextField(blank=True, db_column='RESPONSE_REG', null=True)),
                ('response_sat', models.FloatField(blank=True, db_column='RESPONSE_SAT', null=True)),
                ('re_tm', models.DateTimeField(blank=True, db_column='RE_TM', null=True)),
                ('recordeddate', models.DateTimeField(blank=True, db_column='RecordedDate', null=True)),
                ('renew', models.FloatField(blank=True, db_column='Renew', null=True)),
                ('renew_nps_group', models.FloatField(blank=True, db_column='Renew_NPS_GROUP', null=True)),
                ('responseid', models.TextField(blank=True, db_column='ResponseId', null=True)),
                ('sc_aaia_batt_typ', models.TextField(blank=True, db_column='SC_AAIA_BATT_TYP', null=True)),
                ('sc_batt_repl_indic', models.TextField(blank=True, db_column='SC_BATT_REPL_INDIC', null=True)),
                ('sc_batt_test_results', models.TextField(blank=True, db_column='SC_BATT_TEST_RESULTS', null=True)),
                ('sc_batt_tst_cd', models.TextField(blank=True, db_column='SC_BATT_TST_CD', null=True)),
                ('sc_bat_svc_ind', models.TextField(blank=True, db_column='SC_BAT_SVC_IND', null=True)),
                ('sc_call_clb_cd', models.CharField(blank=True, db_column='SC_CALL_CLB_CD', max_length=255, null=True)),
                ('sc_call_clb_mbr_id', models.CharField(blank=True, db_column='SC_CALL_CLB_MBR_ID', max_length=255, null=True)),
                ('sc_call_mbr_id', models.CharField(blank=True, db_column='SC_CALL_MBR_ID', max_length=255, null=True)),
                ('sc_clr_cd', models.TextField(blank=True, db_column='SC_CLR_CD', null=True)),
                ('sc_club_code', models.TextField(blank=True, db_column='SC_CLUB_CODE', null=True)),
                ('sc_comm_ctr', models.TextField(blank=True, db_column='SC_COMM_CTR', null=True)),
                ('sc_comm_ctr_sub', models.TextField(blank=True, db_column='SC_COMM_CTR_SUB', null=True)),
                ('sc_dt', models.DateTimeField(blank=True, db_column='SC_DT', null=True)),
                ('sc_dt_surveys', models.DateTimeField(blank=True, db_column='SC_DT_surveys', null=True)),
                ('sc_er_dttm', models.DateTimeField(blank=True, db_column='SC_ER_DTTM', null=True)),
                ('sc_eta', models.DateTimeField(blank=True, db_column='SC_ETA', null=True)),
                ('sc_id', models.BigIntegerField(blank=True, db_column='SC_ID', null=True)),
                ('sc_id_surveys', models.TextField(blank=True, db_column='SC_ID_surveys', null=True)),
                ('sc_mbr_cb_indic', models.TextField(blank=True, db_column='SC_MBR_CB_INDIC', null=True)),
                ('sc_ol_dttm', models.DateTimeField(blank=True, db_column='SC_OL_DTTM', null=True)),
                ('sc_prm_arr_dttm', models.DateTimeField(blank=True, db_column='SC_PRM_ARR_DTTM', null=True)),
                ('sc_prob_cd', models.TextField(blank=True, db_column='SC_PROB_CD', null=True)),
                ('sc_reasgn_rsn_cd', models.TextField(blank=True, db_column='SC_REASGN_RSN_CD', null=True)),
                ('sc_recv_dttm', models.DateTimeField(blank=True, db_column='SC_RECV_DTTM', null=True)),
                ('sc_res_cd', models.TextField(blank=True, db_column='SC_RES_CD', null=True)),
                ('sc_svc_clb_cd', models.TextField(blank=True, db_column='SC_SVC_CLB_CD', null=True)),
                ('sc_svc_prov_type', models.CharField(blank=True, db_column='SC_SVC_PROV_TYPE', max_length=255, null=True)),
                ('shop_zip', models.FloatField(blank=True, db_column='SHOP_ZIP', null=True)),
                ('short_match_key', models.CharField(blank=True, db_column='SHORT_MATCH_KEY', max_length=255, null=True)),
                ('single_state', models.TextField(blank=True, db_column='SINGLE_STATE', null=True)),
                ('sms_click', models.TextField(blank=True, db_column='SMS_CLICK', null=True)),
                ('sms_elig', models.TextField(blank=True, db_column='SMS_ELIG', null=True)),
                ('sms_notify', models.TextField(blank=True, db_column='SMS_NOTIFY', null=True)),
                ('sms_opted_in', models.TextField(blank=True, db_column='SMS_OPTED_IN', null=True)),
                ('sms_sent', models.TextField(blank=True, db_column='SMS_SENT', null=True)),
                ('sp_fac_id', models.TextField(blank=True, db_column='SP_FAC_ID', null=True)),
                ('svc_facl_id', models.CharField(blank=True, db_column='SVC_FACL_ID', max_length=255, null=True)),
                ('svc_facl_nm', models.CharField(blank=True, db_column='SVC_FACL_NM', max_length=255, null=True)),
                ('svc_facl_rep_id', models.CharField(blank=True, db_column='SVC_FACL_REP_ID', max_length=255, null=True)),
                ('tcd', models.TextField(blank=True, db_column='TCD', null=True)),
                ('tech_assist', models.TextField(blank=True, db_column='TECH_ASSIST', null=True)),
                ('territory', models.CharField(blank=True, db_column='TERRITORY', max_length=255, null=True)),
                ('text_msg', models.BigIntegerField(blank=True, db_column='TEXT_MSG', null=True)),
                ('tlc_desc', models.TextField(blank=True, db_column='TLC_DESC', null=True)),
                ('tow_cost', models.FloatField(blank=True, db_column='TOW_COST', null=True)),
                ('tow_dest_in_record', models.TextField(blank=True, db_column='TOW_DEST_IN_RECORD', null=True)),
                ('tow_dest_lat', models.TextField(blank=True, db_column='TOW_DEST_LAT', null=True)),
                ('tow_dest_lon', models.TextField(blank=True, db_column='TOW_DEST_LON', null=True)),
                ('tow_dest_near_cty_nm', models.TextField(blank=True, db_column='TOW_DEST_NEAR_CTY_NM', null=True)),
                ('trc_call', models.TextField(blank=True, db_column='TRC_CALL', null=True)),
                ('trk_avl_indic', models.TextField(blank=True, db_column='TRK_AVL_INDIC', null=True)),
                ('trk_disp', models.TextField(blank=True, db_column='TRK_DISP', null=True)),
                ('trk_id', models.TextField(blank=True, db_column='TRK_ID', null=True)),
                ('trk_mobdiag_indic', models.TextField(blank=True, db_column='TRK_MOBDIAG_INDIC', null=True)),
                ('trk_term', models.TextField(blank=True, db_column='TRK_TERM', null=True)),
                ('trk_type', models.TextField(blank=True, db_column='TRK_TYPE', null=True)),
                ('trk_ware', models.TextField(blank=True, db_column='TRK_WARE', null=True)),
                ('tsprequest', models.TextField(blank=True, db_column='TSPRequest', null=True)),
                ('ttl_cost_all_reps', models.TextField(blank=True, db_column='TTL_COST_ALL_REPS', null=True)),
                ('tt_state', models.TextField(blank=True, db_column='TT_STATE', null=True)),
                ('type_of_service', models.TextField(blank=True, db_column='Type_Of_Service', null=True)),
                ('veh_id_nr', models.TextField(blank=True, db_column='VEH_ID_NR', null=True)),
                ('virt_stat', models.TextField(blank=True, db_column='VIRT_STAT', null=True)),
                ('year', models.BigIntegerField(blank=True, db_column='YEAR', null=True)),
                ('driver10', models.FloatField(blank=True, null=True)),
                ('elapsedtime', models.TextField(blank=True, db_column='elapsedTime', null=True)),
                ('event_type', models.TextField(blank=True, null=True)),
                ('id_primary', models.IntegerField(blank=True, null=True)),
                ('identifier', models.TextField(blank=True, null=True)),
                ('new_fields_date_updated', models.DateTimeField(blank=True, null=True)),
                ('service_provider', models.TextField(blank=True, null=True)),
                ('totclubs', models.TextField(blank=True, null=True)),
                ('truck', models.TextField(blank=True, null=True)),
                ('directional_error', models.CharField(blank=True, db_column='Directional_Error', max_length=255, null=True)),
                ('reroute', models.IntegerField(blank=True, db_column='REROUTE', null=True)),
                ('remove', models.IntegerField(db_column='REMOVE')),
                ('clearing_code', models.CharField(blank=True, db_column='CLEARING_CODE', max_length=100, null=True)),
                ('first_spot_id', models.CharField(blank=True, db_column='FIRST_SPOT_ID', max_length=100, null=True)),
                ('first_spot_reason', models.CharField(blank=True, db_column='FIRST_SPOT_REASON', max_length=100, null=True)),
                ('duplicate_call_date', models.DateField(blank=True, db_column='DUPLICATE_CALL_DATE', null=True)),
                ('duplicate_call_id', models.CharField(blank=True, db_column='DUPLICATE_CALL_ID', max_length=100, null=True)),
                ('duplicate_shop_id', models.CharField(blank=True, db_column='DUPLICATE_SHOP_ID', max_length=100, null=True)),
                ('duplicate_clearing_code', models.CharField(blank=True, db_column='DUPLICATE_CLEARING_CODE', max_length=100, null=True)),
                ('reroute_360', models.IntegerField(blank=True, db_column='REROUTE_360', null=True)),
                ('duplicate', models.IntegerField(blank=True, db_column='DUPLICATE_CALL', null=True)),
                ('first_spot_delay', models.IntegerField(blank=True, db_column='FIRST_SPOT_DELAY', null=True)),
                ('sister_reroute', models.IntegerField(blank=True, db_column='SISTER_REROUTE', null=True)),
                ('lost_call', models.IntegerField(blank=True, db_column='LOST_CALL', null=True)),
            ],
            options={
                'db_table': 'std12e_reduced',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TimeseriesPredictionsByHour',
            fields=[
                ('id', models.BigIntegerField(db_column='id', primary_key=True, serialize=False, unique=True)),
                ('sc_dt', models.DateTimeField(blank=True, db_column='SC_DT', null=True)),
                ('volume_pred', models.FloatField(blank=True, db_column='VOLUME_PRED', null=True)),
                ('actual_volume', models.FloatField(blank=True, db_column='ACTUAL_VOLUME', null=True)),
                ('code', models.CharField(blank=True, db_column='TROUBLE_CODE', max_length=255, null=True)),
                ('date_pred', models.DateField(blank=True, db_column='DATE_PREDICTED', null=True)),
                ('organization_id', models.FloatField(blank=True, db_column='ORGANIZATION_ID', null=True)),
                ('was_optimized', models.BooleanField(null=True)),
                ('productivity', models.FloatField(blank=True, db_column='PRODUCTIVITY', null=True)),
                ('drivers_needed', models.BigIntegerField(blank=True, db_column='DRIVERS_NEEDED', null=True)),
                ('rollover_hour_minus_one', models.BigIntegerField(blank=True, db_column='rollover_hour_minus_one', null=True)),
                ('rollover_hour_minus_two', models.BigIntegerField(blank=True, db_column='rollover_hour_minus_two', null=True)),
                ('rollover_hour_minus_three', models.BigIntegerField(blank=True, db_column='rollover_hour_minus_three', null=True)),
                ('waiters', models.BigIntegerField(blank=True, db_column='waiters', null=True)),
                ('new_drivers_needed', models.BigIntegerField(blank=True, db_column='new_drivers_needed', null=True)),
                ('send_home', models.BigIntegerField(blank=True, db_column='send_home', null=True)),
                ('call_time', models.FloatField(blank=True, db_column='call_time', null=True)),
                ('total_drivers', models.BigIntegerField(blank=True, db_column='total_drivers', null=True)),
                ('today', models.FloatField(blank=True, db_column='TODAY_TOTAL_VOLUME', null=True)),
            ],
            options={
                'db_table': 'TIMESERIES_HOUR_CODE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TimeseriesPredictionsHistory',
            fields=[
                ('id', models.BigIntegerField(db_column='id', primary_key=True, serialize=False, unique=True)),
                ('sc_dt', models.DateTimeField(blank=True, db_column='SC_DT', null=True)),
                ('volume_pred', models.FloatField(blank=True, db_column='VOLUME_PRED', null=True)),
                ('volume_pred_upper', models.FloatField(blank=True, db_column='VOLUME_PRED_UPPER', null=True)),
                ('volume_pred_lower', models.FloatField(blank=True, db_column='VOLUME_PRED_LOWER', null=True)),
                ('actual_volume', models.FloatField(blank=True, db_column='ACTUAL_VOLUME', null=True)),
                ('code', models.CharField(blank=True, db_column='TROUBLE_CODE', max_length=255, null=True)),
                ('date_pred', models.DateField(blank=True, db_column='DATE_PREDICTED', null=True)),
                ('organization_id', models.FloatField(blank=True, db_column='ORGANIZATION_ID', null=True)),
                ('today', models.FloatField(blank=True, db_column='TODAY_TOTAL_VOLUME', null=True)),
            ],
            options={
                'db_table': 'TIMESERIES_HISTORICAL_HOURLY',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TimeseriesPredictionsHourly',
            fields=[
                ('id', models.BigIntegerField(db_column='id', primary_key=True, serialize=False, unique=True)),
                ('sc_dt', models.DateTimeField(blank=True, db_column='SC_DT', null=True)),
                ('organization_id', models.FloatField(blank=True, db_column='ORGANIZATION_ID', null=True)),
                ('volume_pred', models.FloatField(blank=True, db_column='VOLUME_PRED', null=True)),
                ('actual_volume', models.FloatField(blank=True, db_column='ACTUAL_VOLUME', null=True)),
                ('volume_pred_lower', models.FloatField(blank=True, db_column='VOLUME_PRED_LOWER', null=True)),
                ('volume_pred_upper', models.FloatField(blank=True, db_column='VOLUME_PRED_UPPER', null=True)),
                ('date_predicted', models.CharField(blank=True, db_column='DATE_PREDICTED', max_length=255, null=True)),
                ('code', models.CharField(blank=True, db_column='TROUBLE_CODE', max_length=255, null=True)),
                ('today', models.FloatField(blank=True, db_column='TODAY_TOTAL_VOLUME', null=True)),
            ],
            options={
                'db_table': 'TIMESERIES_4HOUR_CODE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CommentsSurveysE',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tokenized_comment', models.TextField(blank=True, null=True)),
                ('sentiment', models.FloatField(blank=True, null=True)),
                ('survey', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='survey_e_comments', to='dashboard.Std12EReduced')),
            ],
        ),
        migrations.CreateModel(
            name='CommentTopics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('sentiment', models.FloatField(blank=True, null=True)),
                ('topic', models.TextField(blank=True, null=True)),
                ('survey', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='survey_e_comment_topics', to='dashboard.Std12EReduced')),
            ],
        ),
        migrations.CreateModel(
            name='DashboardNew',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('arc_kmi_avg', models.FloatField(blank=True, db_column='ARC_KMI_AVG', null=True)),
                ('ata_median', models.FloatField(blank=True, db_column='ATA_MEDIAN', null=True)),
                ('ata_minus_pta_median', models.FloatField(blank=True, db_column='ATA_MINUS_PTA_MEDIAN', null=True)),
                ('ata_under_45_count', models.BigIntegerField(blank=True, db_column='ATA_UNDER_45_COUNT', null=True)),
                ('ata_under_45_freq', models.FloatField(blank=True, db_column='ATA_UNDER_45_FREQ', null=True)),
                ('base_cost_avg', models.FloatField(blank=True, db_column='BASE_COST_AVG', null=True)),
                ('base_cost_sum', models.FloatField(blank=True, db_column='BASE_COST_SUM', null=True)),
                ('battery_volume', models.BigIntegerField(blank=True, db_column='BATTERY_VOLUME', null=True)),
                ('batt_test_on_batt_call_count', models.BigIntegerField(blank=True, db_column='BATT_TEST_ON_BATT_CALL_COUNT', null=True)),
                ('batt_test_on_batt_call_freq', models.FloatField(blank=True, db_column='BATT_TEST_ON_BATT_CALL_FREQ', null=True)),
                ('call_accepted_count', models.BigIntegerField(blank=True, db_column='CALL_ACCEPTED_COUNT', null=True)),
                ('call_accepted_freq', models.FloatField(blank=True, db_column='CALL_ACCEPTED_FREQ', null=True)),
                ('call_cost_avg', models.FloatField(blank=True, db_column='CALL_COST_AVG', null=True)),
                ('call_cost_sum', models.FloatField(blank=True, db_column='CALL_COST_SUM', null=True)),
                ('cancelled_count', models.BigIntegerField(blank=True, db_column='CANCELLED_COUNT', null=True)),
                ('cancelled_freq', models.FloatField(blank=True, db_column='CANCELLED_FREQ', null=True)),
                ('check_id_alt_id_dl_count', models.BigIntegerField(blank=True, db_column='CHECK_ID_ALT_ID_DL_COUNT', null=True)),
                ('check_id_alt_id_foreign_count', models.BigIntegerField(blank=True, db_column='CHECK_ID_ALT_ID_FOREIGN_COUNT', null=True)),
                ('check_id_alt_id_military_count', models.BigIntegerField(blank=True, db_column='CHECK_ID_ALT_ID_MILITARY_COUNT', null=True)),
                ('check_id_alt_id_other_govt_count', models.BigIntegerField(blank=True, db_column='CHECK_ID_ALT_ID_OTHER_GOVT_COUNT', null=True)),
                ('check_id_alt_id_passport_count', models.BigIntegerField(blank=True, db_column='CHECK_ID_ALT_ID_PASSPORT_COUNT', null=True)),
                ('check_id_alt_id_registration_count', models.BigIntegerField(blank=True, db_column='CHECK_ID_ALT_ID_REGISTRATION_COUNT', null=True)),
                ('check_id_check_fail_count', models.BigIntegerField(blank=True, db_column='CHECK_ID_CHECK_FAIL_COUNT', null=True)),
                ('check_id_check_fail_freq', models.FloatField(blank=True, db_column='CHECK_ID_CHECK_FAIL_FREQ', null=True)),
                ('check_id_compliant_count', models.BigIntegerField(blank=True, db_column='CHECK_ID_COMPLIANT_COUNT', null=True)),
                ('check_id_compliant_freq', models.FloatField(blank=True, db_column='CHECK_ID_COMPLIANT_FREQ', null=True)),
                ('check_id_compliant_with_tablet_freq', models.FloatField(blank=True, db_column='CHECK_ID_COMPLIANT_WITH_TABLET_FREQ', null=True)),
                ('check_id_declined_reason_no_id_match_count', models.BigIntegerField(blank=True, db_column='CHECK_ID_DECLINED_REASON_NO_ID_MATCH_COUNT', null=True)),
                ('check_id_declined_reason_no_valid_id_count', models.BigIntegerField(blank=True, db_column='CHECK_ID_DECLINED_REASON_NO_VALID_ID_COUNT', null=True)),
                ('check_id_decline_reason_no_id_verify_freq', models.FloatField(blank=True, db_column='CHECK_ID_DECLINE_REASON_NO_ID_VERIFY_FREQ', null=True)),
                ('check_id_decline_reason_no_valid_id_freq', models.FloatField(blank=True, db_column='CHECK_ID_DECLINE_REASON_NO_VALID_ID_FREQ', null=True)),
                ('check_id_decline_run_call_count', models.BigIntegerField(blank=True, db_column='CHECK_ID_DECLINE_RUN_CALL_COUNT', null=True)),
                ('check_id_decline_run_call_freq', models.FloatField(blank=True, db_column='CHECK_ID_DECLINE_RUN_CALL_FREQ', null=True)),
                ('check_id_manual_count', models.BigIntegerField(blank=True, db_column='CHECK_ID_MANUAL_COUNT', null=True)),
                ('check_id_manual_freq', models.FloatField(blank=True, db_column='CHECK_ID_MANUAL_FREQ', null=True)),
                ('check_id_no_scan_reason_declined_scan_freq', models.FloatField(blank=True, db_column='CHECK_ID_NO_SCAN_REASON_DECLINED_SCAN_FREQ', null=True)),
                ('check_id_no_scan_reason_decline_scan_count', models.BigIntegerField(blank=True, db_column='CHECK_ID_NO_SCAN_REASON_DECLINE_SCAN_COUNT', null=True)),
                ('check_id_no_scan_reason_id_check_fail_freq', models.FloatField(blank=True, db_column='CHECK_ID_NO_SCAN_REASON_ID_CHECK_FAIL_FREQ', null=True)),
                ('check_id_no_scan_reason_scan_failed_freq', models.FloatField(blank=True, db_column='CHECK_ID_NO_SCAN_REASON_SCAN_FAILED_FREQ', null=True)),
                ('check_id_no_scan_reason_scan_fail_count', models.BigIntegerField(blank=True, db_column='CHECK_ID_NO_SCAN_REASON_SCAN_FAIL_COUNT', null=True)),
                ('check_id_no_scan_showed_id_drivers_license_freq', models.FloatField(blank=True, db_column='CHECK_ID_NO_SCAN_SHOWED_ID_DRIVERS_LICENSE_FREQ', null=True)),
                ('check_id_no_scan_showed_id_foreign_freq', models.FloatField(blank=True, db_column='CHECK_ID_NO_SCAN_SHOWED_ID_FOREIGN_FREQ', null=True)),
                ('check_id_no_scan_showed_id_military_freq', models.FloatField(blank=True, db_column='CHECK_ID_NO_SCAN_SHOWED_ID_MILITARY_FREQ', null=True)),
                ('check_id_no_scan_showed_id_other_govt_freq', models.FloatField(blank=True, db_column='CHECK_ID_NO_SCAN_SHOWED_ID_OTHER_GOVT_FREQ', null=True)),
                ('check_id_no_scan_showed_id_passport_freq', models.FloatField(blank=True, db_column='CHECK_ID_NO_SCAN_SHOWED_ID_PASSPORT_FREQ', null=True)),
                ('check_id_no_scan_showed_id_registration_freq', models.FloatField(blank=True, db_column='CHECK_ID_NO_SCAN_SHOWED_ID_REGISTRATION_FREQ', null=True)),
                ('check_id_no_scan_showed_valid_id_freq', models.FloatField(blank=True, db_column='CHECK_ID_NO_SCAN_SHOWED_VALID_ID_FREQ', null=True)),
                ('check_id_ran_call_bad_id_count', models.BigIntegerField(blank=True, db_column='CHECK_ID_RAN_CALL_BAD_ID_COUNT', null=True)),
                ('check_id_ran_call_no_id_reason_other_freq', models.FloatField(blank=True, db_column='CHECK_ID_RAN_CALL_NO_ID_REASON_OTHER_FREQ', null=True)),
                ('check_id_ran_call_no_id_reason_safety_freq', models.FloatField(blank=True, db_column='CHECK_ID_RAN_CALL_NO_ID_REASON_SAFETY_FREQ', null=True)),
                ('check_id_ran_call_with_no_id_freq', models.FloatField(blank=True, db_column='CHECK_ID_RAN_CALL_WITH_NO_ID_FREQ', null=True)),
                ('check_id_run_call_reason_other_count', models.BigIntegerField(blank=True, db_column='CHECK_ID_RUN_CALL_REASON_OTHER_COUNT', null=True)),
                ('check_id_run_call_reason_safety_count', models.BigIntegerField(blank=True, db_column='CHECK_ID_RUN_CALL_REASON_SAFETY_COUNT', null=True)),
                ('check_id_scan_count', models.BigIntegerField(blank=True, db_column='CHECK_ID_SCAN_COUNT', null=True)),
                ('check_id_scan_freq', models.FloatField(blank=True, db_column='CHECK_ID_SCAN_FREQ', null=True)),
                ('check_id_showed_valid_id_count', models.BigIntegerField(blank=True, db_column='CHECK_ID_SHOWED_VALID_ID_COUNT', null=True)),
                ('credit_card_spend_avg', models.FloatField(blank=True, db_column='CREDIT_CARD_SPEND_AVG', null=True)),
                ('credit_card_spend_sum', models.FloatField(blank=True, db_column='CREDIT_CARD_SPEND_SUM', null=True)),
                ('dispatch_call_member_count', models.BigIntegerField(blank=True, db_column='DISPATCH_CALL_MEMBER_COUNT', null=True)),
                ('dispatch_call_member_freq', models.FloatField(blank=True, db_column='DISPATCH_CALL_MEMBER_FREQ', null=True)),
                ('dispatch_call_out_count', models.BigIntegerField(blank=True, db_column='DISPATCH_CALL_OUT_COUNT', null=True)),
                ('dispatch_call_out_freq', models.FloatField(blank=True, db_column='DISPATCH_CALL_OUT_FREQ', null=True)),
                ('dispatch_communicated_count', models.BigIntegerField(blank=True, db_column='DISPATCH_COMMUNICATED_COUNT', null=True)),
                ('dispatch_communicated_freq', models.FloatField(blank=True, db_column='DISPATCH_COMMUNICATED_FREQ', null=True)),
                ('early_count', models.BigIntegerField(blank=True, db_column='EARLY_COUNT', null=True)),
                ('early_freq', models.FloatField(blank=True, db_column='EARLY_FREQ', null=True)),
                ('enroute_cost_avg', models.FloatField(blank=True, db_column='ENROUTE_COST_AVG', null=True)),
                ('enroute_cost_sum', models.FloatField(blank=True, db_column='ENROUTE_COST_SUM', null=True)),
                ('eta_update_avg', models.FloatField(blank=True, db_column='ETA_UPDATE_AVG', null=True)),
                ('external_call_out_count', models.BigIntegerField(blank=True, db_column='EXTERNAL_CALL_OUT_COUNT', null=True)),
                ('external_call_out_freq', models.FloatField(blank=True, db_column='EXTERNAL_CALL_OUT_FREQ', null=True)),
                ('g_to_g_count', models.FloatField(blank=True, db_column='G_TO_G_COUNT', null=True)),
                ('g_to_g_freq', models.FloatField(blank=True, db_column='G_TO_G_FREQ', null=True)),
                ('g_to_ng_count', models.FloatField(blank=True, db_column='G_TO_NG_COUNT', null=True)),
                ('g_to_ng_freq', models.FloatField(blank=True, db_column='G_TO_NG_FREQ', null=True)),
                ('has_tablet_volume', models.BigIntegerField(blank=True, db_column='HAS_TABLET_VOLUME', null=True)),
                ('heavy_user', models.FloatField(blank=True, db_column='HEAVY_USER', null=True)),
                ('heavy_user_count', models.FloatField(blank=True, db_column='HEAVY_USER_COUNT', null=True)),
                ('heavy_user_freq', models.FloatField(blank=True, db_column='HEAVY_USER_FREQ', null=True)),
                ('id_name_helper', models.TextField(blank=True, db_column='ID_NAME_HELPER', null=True)),
                ('index_type', models.CharField(blank=True, db_column='INDEX_TYPE', db_index=True, max_length=255, null=True)),
                ('late_count', models.BigIntegerField(blank=True, db_column='LATE_COUNT', null=True)),
                ('late_freq', models.FloatField(blank=True, db_column='LATE_FREQ', null=True)),
                ('long_ata_count', models.BigIntegerField(blank=True, db_column='LONG_ATA_COUNT', null=True)),
                ('long_ata_freq', models.FloatField(blank=True, db_column='LONG_ATA_FREQ', null=True)),
                ('ng_to_g_count', models.FloatField(blank=True, db_column='NG_TO_G_COUNT', null=True)),
                ('ng_to_g_freq', models.FloatField(blank=True, db_column='NG_TO_G_FREQ', null=True)),
                ('ng_to_ng_count', models.FloatField(blank=True, db_column='NG_TO_NG_COUNT', null=True)),
                ('ng_to_ng_freq', models.FloatField(blank=True, db_column='NG_TO_NG_FREQ', null=True)),
                ('not_tow_volume', models.BigIntegerField(blank=True, db_column='NOT_TOW_VOLUME', null=True)),
                ('no_service_rendered_count', models.BigIntegerField(blank=True, db_column='NO_SERVICE_RENDERED_COUNT', null=True)),
                ('no_service_rendered_freq', models.FloatField(blank=True, db_column='NO_SERVICE_RENDERED_FREQ', null=True)),
                ('on_time_count', models.BigIntegerField(blank=True, db_column='ON_TIME_COUNT', null=True)),
                ('on_time_freq', models.FloatField(blank=True, db_column='ON_TIME_FREQ', null=True)),
                ('outside_communicated_count', models.BigIntegerField(blank=True, db_column='OUTSIDE_COMMUNICATED_COUNT', null=True)),
                ('outside_communicated_freq', models.FloatField(blank=True, db_column='OUTSIDE_COMMUNICATED_FREQ', null=True)),
                ('pta_median', models.FloatField(blank=True, db_column='PTA_MEDIAN', null=True)),
                ('replaced_batt_on_failed_batt_call_count', models.BigIntegerField(blank=True, db_column='REPLACED_BATT_ON_FAILED_BATT_CALL_COUNT', null=True)),
                ('replaced_batt_on_failed_batt_call_freq', models.FloatField(blank=True, db_column='REPLACED_BATT_ON_FAILED_BATT_CALL_FREQ', null=True)),
                ('reroute_freq', models.FloatField(blank=True, db_column='REROUTE_FREQ', null=True)),
                ('sc_dt', models.DateTimeField(blank=True, db_column='SC_DT', db_index=True, null=True)),
                ('short_freq', models.FloatField(blank=True, db_column='SHORT_FREQ', null=True)),
                ('spp_call_member_count', models.BigIntegerField(blank=True, db_column='SPP_CALL_MEMBER_COUNT', null=True)),
                ('spp_call_member_freq', models.FloatField(blank=True, db_column='SPP_CALL_MEMBER_FREQ', null=True)),
                ('text_message_count', models.BigIntegerField(blank=True, db_column='TEXT_MESSAGE_COUNT', null=True)),
                ('text_message_freq', models.FloatField(blank=True, db_column='TEXT_MESSAGE_FREQ', null=True)),
                ('time_type', models.CharField(blank=True, db_column='TIME_TYPE', db_index=True, max_length=255, null=True)),
                ('tow_cost_avg', models.FloatField(blank=True, db_column='TOW_COST_AVG', null=True)),
                ('tow_cost_sum', models.FloatField(blank=True, db_column='TOW_COST_SUM', null=True)),
                ('tow_volume', models.BigIntegerField(blank=True, db_column='TOW_VOLUME', null=True)),
                ('truck_call_member_count', models.BigIntegerField(blank=True, db_column='TRUCK_CALL_MEMBER_COUNT', null=True)),
                ('truck_call_member_freq', models.FloatField(blank=True, db_column='TRUCK_CALL_MEMBER_FREQ', null=True)),
                ('volume', models.BigIntegerField(blank=True, db_column='VOLUME', null=True)),
                ('week_day', models.TextField(blank=True, db_column='WEEK_DAY', null=True)),
                ('parent_id', models.FloatField(blank=True, db_column='PARENT_ID', db_index=True, null=True)),
                ('pk_surveys', models.PositiveIntegerField(db_column='pk')),
                ('facility_type', models.CharField(blank=True, db_column='FACILITY_TYPE', max_length=255, null=True)),
                ('aaa_mgmt_any_facility_sat_avg', models.FloatField(blank=True, db_column='AAA_MGMT_ANY_FACILITY_SAT_AVG', null=True)),
                ('aaa_mgmt_any_facility_sat_count', models.BigIntegerField(blank=True, db_column='AAA_MGMT_ANY_FACILITY_SAT_COUNT', null=True)),
                ('aaa_mgmt_any_facility_sat_sum', models.FloatField(blank=True, db_column='AAA_MGMT_ANY_FACILITY_SAT_SUM', null=True)),
                ('aaa_mgmt_any_kept_informed_sat_avg', models.FloatField(blank=True, db_column='AAA_MGMT_ANY_KEPT_INFORMED_SAT_AVG', null=True)),
                ('aaa_mgmt_any_kept_informed_sat_count', models.BigIntegerField(blank=True, db_column='AAA_MGMT_ANY_KEPT_INFORMED_SAT_COUNT', null=True)),
                ('aaa_mgmt_any_kept_informed_sat_sum', models.FloatField(blank=True, db_column='AAA_MGMT_ANY_KEPT_INFORMED_SAT_SUM', null=True)),
                ('aaa_mgmt_any_overall_sat_avg', models.FloatField(blank=True, db_column='AAA_MGMT_ANY_OVERALL_SAT_AVG', null=True)),
                ('aaa_mgmt_any_overall_sat_count', models.BigIntegerField(blank=True, db_column='AAA_MGMT_ANY_OVERALL_SAT_COUNT', null=True)),
                ('aaa_mgmt_any_overall_sat_sum', models.BigIntegerField(blank=True, db_column='AAA_MGMT_ANY_OVERALL_SAT_SUM', null=True)),
                ('aaa_mgmt_any_request_service_sat_avg', models.FloatField(blank=True, db_column='AAA_MGMT_ANY_REQUEST_SERVICE_SAT_AVG', null=True)),
                ('aaa_mgmt_any_request_service_sat_count', models.BigIntegerField(blank=True, db_column='AAA_MGMT_ANY_REQUEST_SERVICE_SAT_COUNT', null=True)),
                ('aaa_mgmt_any_request_service_sat_sum', models.FloatField(blank=True, db_column='AAA_MGMT_ANY_REQUEST_SERVICE_SAT_SUM', null=True)),
                ('aaa_mgmt_any_response_sat_avg', models.FloatField(blank=True, db_column='AAA_MGMT_ANY_RESPONSE_SAT_AVG', null=True)),
                ('aaa_mgmt_any_response_sat_count', models.BigIntegerField(blank=True, db_column='AAA_MGMT_ANY_RESPONSE_SAT_COUNT', null=True)),
                ('aaa_mgmt_any_response_sat_sum', models.FloatField(blank=True, db_column='AAA_MGMT_ANY_RESPONSE_SAT_SUM', null=True)),
                ('aaa_mgmt_battery_facility_sat_avg', models.FloatField(blank=True, db_column='AAA_MGMT_BATTERY_FACILITY_SAT_AVG', null=True)),
                ('aaa_mgmt_battery_facility_sat_count', models.BigIntegerField(blank=True, db_column='AAA_MGMT_BATTERY_FACILITY_SAT_COUNT', null=True)),
                ('aaa_mgmt_battery_facility_sat_sum', models.FloatField(blank=True, db_column='AAA_MGMT_BATTERY_FACILITY_SAT_SUM', null=True)),
                ('aaa_mgmt_battery_kept_informed_sat_avg', models.FloatField(blank=True, db_column='AAA_MGMT_BATTERY_KEPT_INFORMED_SAT_AVG', null=True)),
                ('aaa_mgmt_battery_kept_informed_sat_count', models.BigIntegerField(blank=True, db_column='AAA_MGMT_BATTERY_KEPT_INFORMED_SAT_COUNT', null=True)),
                ('aaa_mgmt_battery_kept_informed_sat_sum', models.FloatField(blank=True, db_column='AAA_MGMT_BATTERY_KEPT_INFORMED_SAT_SUM', null=True)),
                ('aaa_mgmt_battery_overall_sat_avg', models.FloatField(blank=True, db_column='AAA_MGMT_BATTERY_OVERALL_SAT_AVG', null=True)),
                ('aaa_mgmt_battery_overall_sat_count', models.BigIntegerField(blank=True, db_column='AAA_MGMT_BATTERY_OVERALL_SAT_COUNT', null=True)),
                ('aaa_mgmt_battery_overall_sat_sum', models.BigIntegerField(blank=True, db_column='AAA_MGMT_BATTERY_OVERALL_SAT_SUM', null=True)),
                ('aaa_mgmt_battery_request_service_sat_avg', models.FloatField(blank=True, db_column='AAA_MGMT_BATTERY_REQUEST_SERVICE_SAT_AVG', null=True)),
                ('aaa_mgmt_battery_request_service_sat_count', models.BigIntegerField(blank=True, db_column='AAA_MGMT_BATTERY_REQUEST_SERVICE_SAT_COUNT', null=True)),
                ('aaa_mgmt_battery_request_service_sat_sum', models.FloatField(blank=True, db_column='AAA_MGMT_BATTERY_REQUEST_SERVICE_SAT_SUM', null=True)),
                ('aaa_mgmt_battery_response_sat_avg', models.FloatField(blank=True, db_column='AAA_MGMT_BATTERY_RESPONSE_SAT_AVG', null=True)),
                ('aaa_mgmt_battery_response_sat_count', models.BigIntegerField(blank=True, db_column='AAA_MGMT_BATTERY_RESPONSE_SAT_COUNT', null=True)),
                ('aaa_mgmt_battery_response_sat_sum', models.FloatField(blank=True, db_column='AAA_MGMT_BATTERY_RESPONSE_SAT_SUM', null=True)),
                ('aaa_mgmt_not_tow_facility_sat_avg', models.FloatField(blank=True, db_column='AAA_MGMT_NOT_TOW_FACILITY_SAT_AVG', null=True)),
                ('aaa_mgmt_not_tow_facility_sat_count', models.BigIntegerField(blank=True, db_column='AAA_MGMT_NOT_TOW_FACILITY_SAT_COUNT', null=True)),
                ('aaa_mgmt_not_tow_facility_sat_sum', models.FloatField(blank=True, db_column='AAA_MGMT_NOT_TOW_FACILITY_SAT_SUM', null=True)),
                ('aaa_mgmt_not_tow_kept_informed_sat_avg', models.FloatField(blank=True, db_column='AAA_MGMT_NOT_TOW_KEPT_INFORMED_SAT_AVG', null=True)),
                ('aaa_mgmt_not_tow_kept_informed_sat_count', models.BigIntegerField(blank=True, db_column='AAA_MGMT_NOT_TOW_KEPT_INFORMED_SAT_COUNT', null=True)),
                ('aaa_mgmt_not_tow_kept_informed_sat_sum', models.FloatField(blank=True, db_column='AAA_MGMT_NOT_TOW_KEPT_INFORMED_SAT_SUM', null=True)),
                ('aaa_mgmt_not_tow_overall_sat_avg', models.FloatField(blank=True, db_column='AAA_MGMT_NOT_TOW_OVERALL_SAT_AVG', null=True)),
                ('aaa_mgmt_not_tow_overall_sat_count', models.BigIntegerField(blank=True, db_column='AAA_MGMT_NOT_TOW_OVERALL_SAT_COUNT', null=True)),
                ('aaa_mgmt_not_tow_overall_sat_sum', models.BigIntegerField(blank=True, db_column='AAA_MGMT_NOT_TOW_OVERALL_SAT_SUM', null=True)),
                ('aaa_mgmt_not_tow_request_service_sat_avg', models.FloatField(blank=True, db_column='AAA_MGMT_NOT_TOW_REQUEST_SERVICE_SAT_AVG', null=True)),
                ('aaa_mgmt_not_tow_request_service_sat_count', models.BigIntegerField(blank=True, db_column='AAA_MGMT_NOT_TOW_REQUEST_SERVICE_SAT_COUNT', null=True)),
                ('aaa_mgmt_not_tow_request_service_sat_sum', models.FloatField(blank=True, db_column='AAA_MGMT_NOT_TOW_REQUEST_SERVICE_SAT_SUM', null=True)),
                ('aaa_mgmt_not_tow_response_sat_avg', models.FloatField(blank=True, db_column='AAA_MGMT_NOT_TOW_RESPONSE_SAT_AVG', null=True)),
                ('aaa_mgmt_not_tow_response_sat_count', models.BigIntegerField(blank=True, db_column='AAA_MGMT_NOT_TOW_RESPONSE_SAT_COUNT', null=True)),
                ('aaa_mgmt_not_tow_response_sat_sum', models.FloatField(blank=True, db_column='AAA_MGMT_NOT_TOW_RESPONSE_SAT_SUM', null=True)),
                ('aaa_mgmt_tow_facility_sat_avg', models.FloatField(blank=True, db_column='AAA_MGMT_TOW_FACILITY_SAT_AVG', null=True)),
                ('aaa_mgmt_tow_facility_sat_count', models.BigIntegerField(blank=True, db_column='AAA_MGMT_TOW_FACILITY_SAT_COUNT', null=True)),
                ('aaa_mgmt_tow_facility_sat_sum', models.FloatField(blank=True, db_column='AAA_MGMT_TOW_FACILITY_SAT_SUM', null=True)),
                ('aaa_mgmt_tow_kept_informed_sat_avg', models.FloatField(blank=True, db_column='AAA_MGMT_TOW_KEPT_INFORMED_SAT_AVG', null=True)),
                ('aaa_mgmt_tow_kept_informed_sat_count', models.BigIntegerField(blank=True, db_column='AAA_MGMT_TOW_KEPT_INFORMED_SAT_COUNT', null=True)),
                ('aaa_mgmt_tow_kept_informed_sat_sum', models.FloatField(blank=True, db_column='AAA_MGMT_TOW_KEPT_INFORMED_SAT_SUM', null=True)),
                ('aaa_mgmt_tow_overall_sat_avg', models.FloatField(blank=True, db_column='AAA_MGMT_TOW_OVERALL_SAT_AVG', null=True)),
                ('aaa_mgmt_tow_overall_sat_count', models.BigIntegerField(blank=True, db_column='AAA_MGMT_TOW_OVERALL_SAT_COUNT', null=True)),
                ('aaa_mgmt_tow_overall_sat_sum', models.BigIntegerField(blank=True, db_column='AAA_MGMT_TOW_OVERALL_SAT_SUM', null=True)),
                ('aaa_mgmt_tow_request_service_sat_avg', models.FloatField(blank=True, db_column='AAA_MGMT_TOW_REQUEST_SERVICE_SAT_AVG', null=True)),
                ('aaa_mgmt_tow_request_service_sat_count', models.BigIntegerField(blank=True, db_column='AAA_MGMT_TOW_REQUEST_SERVICE_SAT_COUNT', null=True)),
                ('aaa_mgmt_tow_request_service_sat_sum', models.FloatField(blank=True, db_column='AAA_MGMT_TOW_REQUEST_SERVICE_SAT_SUM', null=True)),
                ('aaa_mgmt_tow_response_sat_avg', models.FloatField(blank=True, db_column='AAA_MGMT_TOW_RESPONSE_SAT_AVG', null=True)),
                ('aaa_mgmt_tow_response_sat_count', models.BigIntegerField(blank=True, db_column='AAA_MGMT_TOW_RESPONSE_SAT_COUNT', null=True)),
                ('aaa_mgmt_tow_response_sat_sum', models.FloatField(blank=True, db_column='AAA_MGMT_TOW_RESPONSE_SAT_SUM', null=True)),
                ('comp_any_facility_sat_avg', models.FloatField(blank=True, db_column='COMP_ANY_FACILITY_SAT_AVG', null=True)),
                ('comp_any_facility_sat_count', models.BigIntegerField(blank=True, db_column='COMP_ANY_FACILITY_SAT_COUNT', null=True)),
                ('comp_any_facility_sat_sum', models.FloatField(blank=True, db_column='COMP_ANY_FACILITY_SAT_SUM', null=True)),
                ('comp_any_kept_informed_sat_avg', models.FloatField(blank=True, db_column='COMP_ANY_KEPT_INFORMED_SAT_AVG', null=True)),
                ('comp_any_kept_informed_sat_count', models.BigIntegerField(blank=True, db_column='COMP_ANY_KEPT_INFORMED_SAT_COUNT', null=True)),
                ('comp_any_kept_informed_sat_sum', models.FloatField(blank=True, db_column='COMP_ANY_KEPT_INFORMED_SAT_SUM', null=True)),
                ('comp_any_overall_sat_avg', models.FloatField(blank=True, db_column='COMP_ANY_OVERALL_SAT_AVG', null=True)),
                ('comp_any_overall_sat_count', models.BigIntegerField(blank=True, db_column='COMP_ANY_OVERALL_SAT_COUNT', null=True)),
                ('comp_any_overall_sat_sum', models.BigIntegerField(blank=True, db_column='COMP_ANY_OVERALL_SAT_SUM', null=True)),
                ('comp_any_request_service_sat_avg', models.FloatField(blank=True, db_column='COMP_ANY_REQUEST_SERVICE_SAT_AVG', null=True)),
                ('comp_any_request_service_sat_count', models.BigIntegerField(blank=True, db_column='COMP_ANY_REQUEST_SERVICE_SAT_COUNT', null=True)),
                ('comp_any_request_service_sat_sum', models.FloatField(blank=True, db_column='COMP_ANY_REQUEST_SERVICE_SAT_SUM', null=True)),
                ('comp_any_response_sat_avg', models.FloatField(blank=True, db_column='COMP_ANY_RESPONSE_SAT_AVG', null=True)),
                ('comp_any_response_sat_count', models.BigIntegerField(blank=True, db_column='COMP_ANY_RESPONSE_SAT_COUNT', null=True)),
                ('comp_any_response_sat_sum', models.FloatField(blank=True, db_column='COMP_ANY_RESPONSE_SAT_SUM', null=True)),
                ('comp_battery_facility_sat_avg', models.FloatField(blank=True, db_column='COMP_BATTERY_FACILITY_SAT_AVG', null=True)),
                ('comp_battery_facility_sat_count', models.BigIntegerField(blank=True, db_column='COMP_BATTERY_FACILITY_SAT_COUNT', null=True)),
                ('comp_battery_facility_sat_sum', models.FloatField(blank=True, db_column='COMP_BATTERY_FACILITY_SAT_SUM', null=True)),
                ('comp_battery_kept_informed_sat_avg', models.FloatField(blank=True, db_column='COMP_BATTERY_KEPT_INFORMED_SAT_AVG', null=True)),
                ('comp_battery_kept_informed_sat_count', models.BigIntegerField(blank=True, db_column='COMP_BATTERY_KEPT_INFORMED_SAT_COUNT', null=True)),
                ('comp_battery_kept_informed_sat_sum', models.FloatField(blank=True, db_column='COMP_BATTERY_KEPT_INFORMED_SAT_SUM', null=True)),
                ('comp_battery_overall_sat_avg', models.FloatField(blank=True, db_column='COMP_BATTERY_OVERALL_SAT_AVG', null=True)),
                ('comp_battery_overall_sat_count', models.BigIntegerField(blank=True, db_column='COMP_BATTERY_OVERALL_SAT_COUNT', null=True)),
                ('comp_battery_overall_sat_sum', models.BigIntegerField(blank=True, db_column='COMP_BATTERY_OVERALL_SAT_SUM', null=True)),
                ('comp_battery_request_service_sat_avg', models.FloatField(blank=True, db_column='COMP_BATTERY_REQUEST_SERVICE_SAT_AVG', null=True)),
                ('comp_battery_request_service_sat_count', models.BigIntegerField(blank=True, db_column='COMP_BATTERY_REQUEST_SERVICE_SAT_COUNT', null=True)),
                ('comp_battery_request_service_sat_sum', models.FloatField(blank=True, db_column='COMP_BATTERY_REQUEST_SERVICE_SAT_SUM', null=True)),
                ('comp_battery_response_sat_avg', models.FloatField(blank=True, db_column='COMP_BATTERY_RESPONSE_SAT_AVG', null=True)),
                ('comp_battery_response_sat_count', models.BigIntegerField(blank=True, db_column='COMP_BATTERY_RESPONSE_SAT_COUNT', null=True)),
                ('comp_battery_response_sat_sum', models.FloatField(blank=True, db_column='COMP_BATTERY_RESPONSE_SAT_SUM', null=True)),
                ('comp_not_tow_facility_sat_avg', models.FloatField(blank=True, db_column='COMP_NOT_TOW_FACILITY_SAT_AVG', null=True)),
                ('comp_not_tow_facility_sat_count', models.BigIntegerField(blank=True, db_column='COMP_NOT_TOW_FACILITY_SAT_COUNT', null=True)),
                ('comp_not_tow_facility_sat_sum', models.FloatField(blank=True, db_column='COMP_NOT_TOW_FACILITY_SAT_SUM', null=True)),
                ('comp_not_tow_kept_informed_sat_avg', models.FloatField(blank=True, db_column='COMP_NOT_TOW_KEPT_INFORMED_SAT_AVG', null=True)),
                ('comp_not_tow_kept_informed_sat_count', models.BigIntegerField(blank=True, db_column='COMP_NOT_TOW_KEPT_INFORMED_SAT_COUNT', null=True)),
                ('comp_not_tow_kept_informed_sat_sum', models.FloatField(blank=True, db_column='COMP_NOT_TOW_KEPT_INFORMED_SAT_SUM', null=True)),
                ('comp_not_tow_overall_sat_avg', models.FloatField(blank=True, db_column='COMP_NOT_TOW_OVERALL_SAT_AVG', null=True)),
                ('comp_not_tow_overall_sat_count', models.BigIntegerField(blank=True, db_column='COMP_NOT_TOW_OVERALL_SAT_COUNT', null=True)),
                ('comp_not_tow_overall_sat_sum', models.BigIntegerField(blank=True, db_column='COMP_NOT_TOW_OVERALL_SAT_SUM', null=True)),
                ('comp_not_tow_request_service_sat_avg', models.FloatField(blank=True, db_column='COMP_NOT_TOW_REQUEST_SERVICE_SAT_AVG', null=True)),
                ('comp_not_tow_request_service_sat_count', models.BigIntegerField(blank=True, db_column='COMP_NOT_TOW_REQUEST_SERVICE_SAT_COUNT', null=True)),
                ('comp_not_tow_request_service_sat_sum', models.FloatField(blank=True, db_column='COMP_NOT_TOW_REQUEST_SERVICE_SAT_SUM', null=True)),
                ('comp_not_tow_response_sat_avg', models.FloatField(blank=True, db_column='COMP_NOT_TOW_RESPONSE_SAT_AVG', null=True)),
                ('comp_not_tow_response_sat_count', models.BigIntegerField(blank=True, db_column='COMP_NOT_TOW_RESPONSE_SAT_COUNT', null=True)),
                ('comp_not_tow_response_sat_sum', models.FloatField(blank=True, db_column='COMP_NOT_TOW_RESPONSE_SAT_SUM', null=True)),
                ('comp_tow_facility_sat_avg', models.FloatField(blank=True, db_column='COMP_TOW_FACILITY_SAT_AVG', null=True)),
                ('comp_tow_facility_sat_count', models.BigIntegerField(blank=True, db_column='COMP_TOW_FACILITY_SAT_COUNT', null=True)),
                ('comp_tow_facility_sat_sum', models.FloatField(blank=True, db_column='COMP_TOW_FACILITY_SAT_SUM', null=True)),
                ('comp_tow_kept_informed_sat_avg', models.FloatField(blank=True, db_column='COMP_TOW_KEPT_INFORMED_SAT_AVG', null=True)),
                ('comp_tow_kept_informed_sat_count', models.BigIntegerField(blank=True, db_column='COMP_TOW_KEPT_INFORMED_SAT_COUNT', null=True)),
                ('comp_tow_kept_informed_sat_sum', models.FloatField(blank=True, db_column='COMP_TOW_KEPT_INFORMED_SAT_SUM', null=True)),
                ('comp_tow_overall_sat_avg', models.FloatField(blank=True, db_column='COMP_TOW_OVERALL_SAT_AVG', null=True)),
                ('comp_tow_overall_sat_count', models.BigIntegerField(blank=True, db_column='COMP_TOW_OVERALL_SAT_COUNT', null=True)),
                ('comp_tow_overall_sat_sum', models.BigIntegerField(blank=True, db_column='COMP_TOW_OVERALL_SAT_SUM', null=True)),
                ('comp_tow_request_service_sat_avg', models.FloatField(blank=True, db_column='COMP_TOW_REQUEST_SERVICE_SAT_AVG', null=True)),
                ('comp_tow_request_service_sat_count', models.BigIntegerField(blank=True, db_column='COMP_TOW_REQUEST_SERVICE_SAT_COUNT', null=True)),
                ('comp_tow_request_service_sat_sum', models.FloatField(blank=True, db_column='COMP_TOW_REQUEST_SERVICE_SAT_SUM', null=True)),
                ('comp_tow_response_sat_avg', models.FloatField(blank=True, db_column='COMP_TOW_RESPONSE_SAT_AVG', null=True)),
                ('comp_tow_response_sat_count', models.BigIntegerField(blank=True, db_column='COMP_TOW_RESPONSE_SAT_COUNT', null=True)),
                ('comp_tow_response_sat_sum', models.FloatField(blank=True, db_column='COMP_TOW_RESPONSE_SAT_SUM', null=True)),
                ('check_id_declined_reason_no_name_match_count', models.FloatField(blank=True, db_column='CHECK_ID_DECLINED_REASON_NO_NAME_MATCH_COUNT', null=True)),
                ('check_id_declined_reason_gone_on_arrival_count', models.FloatField(blank=True, db_column='CHECK_ID_DECLINED_REASON_GONE_ON_ARRIVAL_COUNT', null=True)),
                ('check_id_declined_reason_no_name_match_freq', models.FloatField(blank=True, db_column='CHECK_ID_DECLINED_REASON_NO_NAME_MATCH_FREQ', null=True)),
                ('check_id_declined_reason_gone_on_arrival_freq', models.FloatField(blank=True, db_column='CHECK_ID_DECLINED_REASON_GONE_ON_ARRIVAL_FREQ', null=True)),
                ('check_id_alt_id_no_dl_count', models.FloatField(blank=True, db_column='CHECK_ID_ALT_ID_NO_DL_COUNT', null=True)),
                ('check_id_alt_id_no_dl_freq', models.FloatField(blank=True, db_column='CHECK_ID_ALT_ID_NO_DL_FREQ', null=True)),
                ('check_id_scan_screen_used_count', models.FloatField(blank=True, db_column='CHECK_ID_SCAN_SCREEN_USED_COUNT', null=True)),
                ('check_id_scan_screen_used_freq', models.FloatField(blank=True, db_column='CHECK_ID_SCAN_SCREEN_USED_FREQ', null=True)),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dashboard_emp', to='accounts.Employee')),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dashboard_org', to='accounts.Organization')),
            ],
        ),
        migrations.CreateModel(
            name='DashboardUpdateHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_updated', models.DateTimeField()),
                ('notes', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeDashboard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=500, null=True)),
                ('order', models.IntegerField(null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('notification', models.TextField(blank=True, null=True)),
                ('notification_type', models.CharField(blank=True, max_length=500, null=True)),
                ('employees', models.ManyToManyField(to='accounts.Employee')),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owned_dashboards', to='accounts.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeDashboardElement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request', models.TextField(null=True)),
                ('chart_type', models.CharField(max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comments', models.TextField(null=True)),
                ('order', models.IntegerField(null=True)),
                ('dashboard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='elements', to='dashboard.EmployeeDashboard')),
            ],
        ),
        migrations.CreateModel(
            name='MetricGoals',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('target', models.FloatField(blank=True, null=True)),
                ('range', models.FloatField(blank=True, null=True)),
                ('month', models.DateField(blank=True, null=True)),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='goals_user', to='accounts.Employee')),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='goals_organization', to='accounts.Organization')),
            ],
        ),
        migrations.CreateModel(
            name='PlaceholderDriver',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('service_type', models.CharField(blank=True, max_length=255, null=True)),
                ('sun_start', models.TimeField(blank=True, null=True)),
                ('sun_end', models.TimeField(blank=True, null=True)),
                ('mon_start', models.TimeField(blank=True, null=True)),
                ('mon_end', models.TimeField(blank=True, null=True)),
                ('tue_start', models.TimeField(blank=True, null=True)),
                ('tue_end', models.TimeField(blank=True, null=True)),
                ('wed_start', models.TimeField(blank=True, null=True)),
                ('wed_end', models.TimeField(blank=True, null=True)),
                ('thu_start', models.TimeField(blank=True, null=True)),
                ('thu_end', models.TimeField(blank=True, null=True)),
                ('fri_start', models.TimeField(blank=True, null=True)),
                ('fri_end', models.TimeField(blank=True, null=True)),
                ('sat_start', models.TimeField(blank=True, null=True)),
                ('sat_end', models.TimeField(blank=True, null=True)),
                ('sun_available', models.BooleanField(default=True)),
                ('mon_available', models.BooleanField(default=True)),
                ('tue_available', models.BooleanField(default=True)),
                ('wed_available', models.BooleanField(default=True)),
                ('thu_available', models.BooleanField(default=True)),
                ('fri_available', models.BooleanField(default=True)),
                ('sat_available', models.BooleanField(default=True)),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.Organization')),
            ],
        ),
        migrations.CreateModel(
            name='RawOps',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('svc_facl_id', models.CharField(blank=True, db_column='SVC_FACL_ID', max_length=255, null=True)),
                ('sc_dt', models.DateTimeField(blank=True, db_column='SC_DT', null=True)),
                ('sc_id', models.CharField(blank=True, db_column='SC_ID', max_length=255, null=True)),
                ('tcd', models.CharField(blank=True, db_column='TCD', max_length=255, null=True)),
                ('resolution', models.CharField(blank=True, db_column='RESOLUTION', max_length=255, null=True)),
                ('fac_type', models.CharField(blank=True, db_column='FAC_TYPE', max_length=255, null=True)),
                ('driver_name', models.CharField(blank=True, db_column='DRIVER_NAME', max_length=255, null=True)),
                ('svc_facl_nm', models.CharField(blank=True, db_column='SVC_FACL_NM', max_length=255, null=True)),
                ('miles_dest', models.FloatField(blank=True, db_column='MILES_DEST', null=True)),
                ('sc_reasgn_rsn_cd', models.CharField(blank=True, db_column='SC_REASGN_RSN_CD', max_length=255, null=True)),
                ('re_tm', models.DateTimeField(blank=True, db_column='RE_TM', null=True)),
                ('promised_time', models.DateTimeField(blank=True, db_column='PROMISED_TIME', null=True)),
                ('fst_ol_time', models.DateTimeField(blank=True, db_column='FST_OL_TIME', null=True)),
                ('failed_battery_test', models.BigIntegerField(blank=True, db_column='FAILED_BATTERY_TEST', null=True)),
                ('battery_test', models.BigIntegerField(blank=True, db_column='BATTERY_TEST', null=True)),
                ('call_cost', models.FloatField(blank=True, db_column='CALL_COST', null=True)),
                ('co_ext', models.BigIntegerField(blank=True, db_column='CO_EXT', null=True)),
                ('cm_trk', models.BigIntegerField(blank=True, db_column='CM_TRK', null=True)),
                ('cm_spp', models.BigIntegerField(blank=True, db_column='CM_SPP', null=True)),
                ('cm_dispatch', models.BigIntegerField(blank=True, db_column='CM_DISPATCH', null=True)),
                ('co_dispatch', models.BigIntegerField(blank=True, db_column='CO_DISPATCH', null=True)),
                ('text_msg', models.BigIntegerField(blank=True, db_column='TEXT_MSG', null=True)),
                ('bl_lat', models.FloatField(blank=True, db_column='BL_LAT', null=True)),
                ('bl_long', models.FloatField(blank=True, db_column='BL_LONG', null=True)),
                ('er_lat', models.FloatField(blank=True, db_column='ER_LAT', null=True)),
                ('er_long', models.FloatField(blank=True, db_column='ER_LONG', null=True)),
                ('match_key', models.CharField(blank=True, db_column='MATCH_KEY', max_length=255, null=True, unique=True)),
                ('date_updated', models.DateTimeField(blank=True, db_column='DATE_UPDATED', null=True)),
                ('bl_state_cd', models.CharField(blank=True, db_column='BL_STATE_CD', max_length=255, null=True)),
                ('grid_id', models.CharField(blank=True, db_column='GRID_ID', max_length=255, null=True)),
                ('plus_ind', models.CharField(blank=True, db_column='PLUS_IND', max_length=255, null=True)),
                ('prim_bat_rider', models.CharField(blank=True, db_column='PRIM_BAT_RIDER', max_length=255, null=True)),
                ('clear_time', models.DateTimeField(blank=True, db_column='CLEAR_TIME', null=True)),
                ('call_center_operator', models.CharField(blank=True, db_column='CALL_CENTER_OPERATOR', max_length=255, null=True)),
                ('base_cost', models.FloatField(blank=True, db_column='BASE_COST', null=True)),
                ('enroute_cost', models.FloatField(blank=True, db_column='ENROUTE_COST', null=True)),
                ('tow_cost', models.FloatField(blank=True, db_column='TOW_COST', null=True)),
                ('associate_count', models.BigIntegerField(blank=True, db_column='ASSOCIATE_COUNT', null=True)),
                ('eta', models.BigIntegerField(blank=True, db_column='ETA', null=True)),
                ('org_svc_facl_id', models.FloatField(blank=True, db_column='ORG_SVC_FACL_ID', db_index=True, null=True)),
                ('emp_driver_id', models.FloatField(blank=True, db_column='EMP_DRIVER_ID', db_index=True, null=True)),
                ('org_business_id', models.FloatField(blank=True, db_column='ORG_BUSINESS_ID', db_index=True, null=True)),
                ('org_territory_id', models.FloatField(blank=True, db_column='ORG_TERRITORY_ID', db_index=True, null=True)),
                ('org_market_id', models.FloatField(blank=True, db_column='ORG_MARKET_ID', db_index=True, null=True)),
                ('call_accepted', models.IntegerField(blank=True, db_column='CALL_ACCEPTED', null=True)),
                ('ata', models.DecimalField(blank=True, db_column='ATA', decimal_places=1, max_digits=22, null=True)),
                ('pta', models.DecimalField(blank=True, db_column='PTA', decimal_places=1, max_digits=22, null=True)),
                ('ata_minus_pta', models.FloatField(blank=True, db_column='ATA_MINUS_PTA', null=True)),
                ('early', models.IntegerField(blank=True, db_column='EARLY', null=True)),
                ('late', models.IntegerField(blank=True, db_column='LATE', null=True)),
                ('on_time', models.IntegerField(blank=True, db_column='ON_TIME', null=True)),
                ('long_ata', models.IntegerField(blank=True, db_column='LONG_ATA', null=True)),
                ('nsr', models.IntegerField(blank=True, db_column='NSR', null=True)),
                ('cancelled', models.IntegerField(blank=True, db_column='CANCELLED', null=True)),
                ('ng_to_g', models.IntegerField(blank=True, db_column='NG_TO_G', null=True)),
                ('g_to_ng', models.IntegerField(blank=True, db_column='G_TO_NG', null=True)),
                ('g_to_g', models.IntegerField(blank=True, db_column='G_TO_G', null=True)),
                ('ng_to_ng', models.IntegerField(blank=True, db_column='NG_TO_NG', null=True)),
                ('dispatch_communicated', models.IntegerField(blank=True, db_column='DISPATCH_COMMUNICATED', null=True)),
                ('outside_communicated', models.IntegerField(blank=True, db_column='OUTSIDE_COMMUNICATED', null=True)),
                ('batt_test_on_batt_call', models.IntegerField(blank=True, db_column='BATT_TEST_ON_BATT_CALL', null=True)),
                ('replaced_batt_on_failed_batt_call', models.IntegerField(blank=True, db_column='REPLACED_BATT_ON_FAILED_BATT_CALL', null=True)),
                ('org_call_center', models.FloatField(blank=True, db_column='ORG_CALL_CENTER', null=True)),
                ('org_call_center_group', models.FloatField(blank=True, db_column='ORG_CALL_CENTER_GROUP', null=True)),
                ('org_grid', models.FloatField(blank=True, db_column='ORG_GRID', db_index=True, null=True)),
                ('org_booth', models.FloatField(blank=True, db_column='ORG_BOOTH', null=True)),
                ('org_club_region', models.FloatField(blank=True, db_column='ORG_CLUB_REGION', db_index=True, null=True)),
                ('org_zipcode', models.FloatField(blank=True, db_column='ORG_ZIPCODE', null=True)),
                ('emp_call_center_operator', models.FloatField(blank=True, db_column='EMP_CALL_CENTER_OPERATOR', null=True)),
                ('emp_svc_facl_rep', models.FloatField(blank=True, db_column='EMP_SVC_FACL_REP', null=True)),
                ('heavy_user', models.FloatField(blank=True, db_column='HEAVY_USER', null=True)),
                ('check_id_id', models.BigIntegerField(blank=True, db_column='CHECK_ID_ID', null=True)),
                ('check_id_compliant', models.IntegerField(blank=True, db_column='CHECK_ID_COMPLIANT', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RawStd12EQuestions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field', models.CharField(blank=True, max_length=255, null=True)),
                ('question', models.TextField(blank=True, null=True)),
                ('question_type', models.CharField(blank=True, max_length=255, null=True)),
                ('question_options', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SchedulerReviewByDriver',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True)),
                ('starting_time', models.DateTimeField(blank=True, null=True)),
                ('ending_time', models.DateTimeField(blank=True, null=True)),
                ('duration', models.IntegerField(blank=True, null=True)),
                ('tcd', models.CharField(blank=True, max_length=225, null=True)),
                ('off', models.BooleanField(blank=True, null=True)),
                ('employee', models.ForeignKey(blank=True, db_column='EMP_DRIVER_ID', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='schedulerReivew', to='accounts.Employee')),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='schedulerReivew', to='accounts.Organization')),
                ('placeholder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ghost_driver_scheduled', to='dashboard.PlaceholderDriver')),
            ],
        ),
        migrations.CreateModel(
            name='SkillLevels',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill_name', models.TextField(blank=True, null=True)),
                ('level', models.BigIntegerField(blank=True, null=True)),
                ('min_value', models.FloatField(blank=True, null=True)),
                ('max_value', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SkillLevelsEmployee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(blank=True, db_column='start_date', null=True)),
                ('skill_name', models.TextField(blank=True, db_column='skill_name', null=True)),
                ('value', models.FloatField(blank=True, db_column='value', null=True)),
                ('tenure', models.DateTimeField(blank=True, db_column='tenure', null=True)),
                ('tenure_average', models.FloatField(blank=True, db_column='tenure_average', null=True)),
                ('skill_level', models.BigIntegerField(blank=True, db_column='skill_level', null=True)),
                ('skill_level_min', models.FloatField(blank=True, db_column='skill_level_min', null=True)),
                ('skill_level_max', models.FloatField(blank=True, db_column='skill_level_max', null=True)),
                ('aggregated', models.BooleanField(blank=True, db_column='aggregated', null=True)),
                ('employee', models.ForeignKey(blank=True, db_column='EMP_DRIVER_ID', null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.Employee')),
                ('organization', models.ForeignKey(blank=True, db_column='organization_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.Organization')),
            ],
        ),
        migrations.CreateModel(
            name='SkillLevelsTenureLevels',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quarter_start_date', models.DateTimeField(blank=True, null=True)),
                ('quarter_end_date', models.DateTimeField(blank=True, null=True)),
                ('average', models.FloatField(blank=True, null=True)),
                ('skill', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Std12ERaw',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aar_fac_id', models.TextField(blank=True, db_column='AAR_FAC_ID', null=True)),
                ('aar_fac_name', models.TextField(blank=True, db_column='AAR_FAC_NAME', null=True)),
                ('aar_or_co_fac_indic', models.TextField(blank=True, db_column='AAR_OR_CO_FAC_INDIC', null=True)),
                ('accd_insur', models.TextField(blank=True, db_column='ACCD_INSUR', null=True)),
                ('aces_b_veh_id', models.TextField(blank=True, db_column='ACES_B_VEH_ID', null=True)),
                ('alt_tow_dest', models.TextField(blank=True, db_column='ALT_TOW_DEST', null=True)),
                ('aqs12_eli', models.TextField(blank=True, db_column='AQS12_ELI', null=True)),
                ('associate_count', models.BigIntegerField(blank=True, db_column='ASSOCIATE_COUNT', null=True)),
                ('associate_id', models.TextField(blank=True, db_column='ASSOCIATE_ID', null=True)),
                ('ata', models.DecimalField(blank=True, db_column='ATA', decimal_places=1, max_digits=22, null=True)),
                ('ata_minus_pta', models.FloatField(blank=True, db_column='ATA_MINUS_PTA', null=True)),
                ('accreditation', models.CharField(blank=True, db_column='Accreditation', max_length=255, null=True)),
                ('age_group', models.TextField(blank=True, db_column='Age_Group', null=True)),
                ('base_cost', models.FloatField(blank=True, db_column='BASE_COST', null=True)),
                ('battery_test', models.BigIntegerField(blank=True, db_column='BATTERY_TEST', null=True)),
                ('batt_svc_veh_disp_ind', models.TextField(blank=True, db_column='BATT_SVC_VEH_DISP_IND', null=True)),
                ('batt_test_on_batt_call', models.IntegerField(blank=True, db_column='BATT_TEST_ON_BATT_CALL', null=True)),
                ('ba_dol', models.TextField(blank=True, db_column='BA_DOL', null=True)),
                ('bl_home_indic', models.TextField(blank=True, db_column='BL_HOME_INDIC', null=True)),
                ('bl_lat', models.FloatField(blank=True, db_column='BL_LAT', null=True)),
                ('bl_long', models.FloatField(blank=True, db_column='BL_LONG', null=True)),
                ('bl_near_cty_nm', models.CharField(blank=True, db_column='BL_NEAR_CTY_NM', db_index=True, max_length=255, null=True)),
                ('bl_state_cd', models.TextField(blank=True, db_column='BL_STATE_CD', null=True)),
                ('booth', models.CharField(blank=True, db_column='BOOTH', max_length=255, null=True)),
                ('battery_service_type', models.TextField(blank=True, db_column='Battery_Service_Type', null=True)),
                ('call_accepted', models.IntegerField(blank=True, db_column='CALL_ACCEPTED', null=True)),
                ('call_center', models.TextField(blank=True, db_column='CALL_CENTER', null=True)),
                ('call_center_group', models.CharField(blank=True, db_column='CALL_CENTER_GROUP', max_length=255, null=True)),
                ('call_center_operator', models.CharField(blank=True, db_column='CALL_CENTER_OPERATOR', max_length=255, null=True)),
                ('call_cost', models.FloatField(blank=True, db_column='CALL_COST', null=True)),
                ('call_mover', models.TextField(blank=True, db_column='CALL_MOVER', null=True)),
                ('cancelled', models.IntegerField(blank=True, db_column='CANCELLED', null=True)),
                ('can_ser_ind', models.TextField(blank=True, db_column='CAN_SER_IND', null=True)),
                ('cas_cll_ind', models.TextField(blank=True, db_column='CAS_CLL_IND', null=True)),
                ('cc_amt', models.FloatField(blank=True, db_column='CC_AMT', null=True)),
                ('check_id_check_fail', models.IntegerField(blank=True, db_column='CHECK_ID_CHECK_FAIL', null=True)),
                ('check_id_compliant', models.IntegerField(blank=True, db_column='CHECK_ID_COMPLIANT', null=True)),
                ('check_id_decline_reason_with_id', models.CharField(blank=True, db_column='CHECK_ID_DECLINE_REASON_WITH_ID', max_length=255, null=True)),
                ('check_id_id', models.BigIntegerField(blank=True, db_column='CHECK_ID_ID', null=True)),
                ('check_id_id_type', models.CharField(blank=True, db_column='CHECK_ID_ID_TYPE', max_length=255, null=True)),
                ('check_id_imei', models.CharField(blank=True, db_column='CHECK_ID_IMEI', max_length=255, null=True)),
                ('check_id_input_method', models.CharField(blank=True, db_column='CHECK_ID_INPUT_METHOD', max_length=255, null=True)),
                ('check_id_no_scan_reason', models.CharField(blank=True, db_column='CHECK_ID_NO_SCAN_REASON', max_length=255, null=True)),
                ('check_id_ran_call', models.IntegerField(blank=True, db_column='CHECK_ID_RAN_CALL', null=True)),
                ('check_id_ran_call_no_id_reason', models.CharField(blank=True, db_column='CHECK_ID_RAN_CALL_NO_ID_REASON', max_length=255, null=True)),
                ('check_id_showed_valid_id', models.IntegerField(blank=True, db_column='CHECK_ID_SHOWED_VALID_ID', null=True)),
                ('chg_entitlement', models.TextField(blank=True, db_column='CHG_ENTITLEMENT', null=True)),
                ('chrg_entitlement', models.TextField(blank=True, db_column='CHRG_ENTITLEMENT', null=True)),
                ('clb_opt_fld_1', models.TextField(blank=True, db_column='CLB_OPT_FLD_1', null=True)),
                ('clb_opt_fld_2', models.TextField(blank=True, db_column='CLB_OPT_FLD_2', null=True)),
                ('clb_opt_fld_3', models.TextField(blank=True, db_column='CLB_OPT_FLD_3', null=True)),
                ('clb_opt_fld_4', models.TextField(blank=True, db_column='CLB_OPT_FLD_4', null=True)),
                ('clb_opt_fld_5', models.TextField(blank=True, db_column='CLB_OPT_FLD_5', null=True)),
                ('clear_time', models.DateTimeField(blank=True, db_column='CLEAR_TIME', null=True)),
                ('club', models.TextField(blank=True, db_column='CLUB', null=True)),
                ('club_group', models.TextField(blank=True, db_column='CLUB_GROUP', null=True)),
                ('club_name', models.TextField(blank=True, db_column='CLUB_NAME', null=True)),
                ('club_recode', models.TextField(blank=True, db_column='CLUB_RECODE', null=True)),
                ('club_surveys', models.TextField(blank=True, db_column='CLUB_surveys', null=True)),
                ('cl_pay_dt', models.TextField(blank=True, db_column='CL_PAY_DT', null=True)),
                ('cm_dispatch', models.BigIntegerField(blank=True, db_column='CM_DISPATCH', null=True)),
                ('cm_spp', models.BigIntegerField(blank=True, db_column='CM_SPP', null=True)),
                ('cm_trk', models.BigIntegerField(blank=True, db_column='CM_TRK', null=True)),
                ('col_cll', models.TextField(blank=True, db_column='COL_CLL', null=True)),
                ('comm_ctr_id', models.CharField(blank=True, db_column='COMM_CTR_ID', max_length=255, null=True)),
                ('con_acc_hwy', models.TextField(blank=True, db_column='CON_ACC_HWY', null=True)),
                ('co_dispatch', models.BigIntegerField(blank=True, db_column='CO_DISPATCH', null=True)),
                ('co_ext', models.BigIntegerField(blank=True, db_column='CO_EXT', null=True)),
                ('club_tier', models.TextField(blank=True, db_column='Club_Tier', null=True)),
                ('date_updated', models.DateTimeField(blank=True, db_column='DATE_UPDATED', null=True)),
                ('date_updated_surveys', models.DateTimeField(blank=True, db_column='DATE_UPDATED_surveys', null=True)),
                ('dispatch_communicated', models.IntegerField(blank=True, db_column='DISPATCH_COMMUNICATED', null=True)),
                ('disp_unit_type', models.TextField(blank=True, db_column='DISP_UNIT_TYPE', null=True)),
                ('driver_id', models.TextField(blank=True, db_column='DRIVER_ID', null=True)),
                ('directional_error', models.CharField(blank=True, db_column='Directional_Error', max_length=255, null=True)),
                ('driver_name', models.CharField(blank=True, db_column='DRIVER_NAME', max_length=255, null=True)),
                ('drv_id', models.FloatField(blank=True, db_column='DRV_ID', null=True)),
                ('dtl_prob_code', models.TextField(blank=True, db_column='DTL_PROB_CODE', null=True)),
                ('dup_as_srv_tck', models.TextField(blank=True, db_column='DUP_AS_SRV_TCK', null=True)),
                ('dup_call_id', models.TextField(blank=True, db_column='DUP_CALL_ID', null=True)),
                ('dup_cll_veh_chg', models.TextField(blank=True, db_column='DUP_CLL_VEH_CHG', null=True)),
                ('dup_svc_call_date', models.TextField(blank=True, db_column='DUP_SVC_CALL_DATE', null=True)),
                ('desc2', models.FloatField(blank=True, db_column='Desc2', null=True)),
                ('desc2_4_text', models.TextField(blank=True, db_column='Desc2_4_TEXT', null=True)),
                ('driver5', models.FloatField(blank=True, db_column='Driver5', null=True)),
                ('duration_in_seconds_field', models.FloatField(blank=True, db_column='Duration__in_seconds_', null=True)),
                ('early', models.IntegerField(blank=True, db_column='EARLY', null=True)),
                ('emp_call_center_operator', models.IntegerField(blank=True, db_column='EMP_CALL_CENTER_OPERATOR', null=True)),
                ('enroute_cost', models.FloatField(blank=True, db_column='ENROUTE_COST', null=True)),
                ('ers_cc_id', models.TextField(blank=True, db_column='ERS_CC_ID', null=True)),
                ('ers_cc_role', models.TextField(blank=True, db_column='ERS_CC_ROLE', null=True)),
                ('ers_reimb', models.TextField(blank=True, db_column='ERS_Reimb', null=True)),
                ('ers_ser_rec', models.TextField(blank=True, db_column='ERS_SER_REC', null=True)),
                ('er_lat', models.FloatField(blank=True, db_column='ER_LAT', null=True)),
                ('er_long', models.FloatField(blank=True, db_column='ER_LONG', null=True)),
                ('er_miles', models.TextField(blank=True, db_column='ER_MILES', null=True)),
                ('eta', models.BigIntegerField(blank=True, db_column='ETA', null=True)),
                ('externalreference', models.TextField(blank=True, db_column='ExternalReference', null=True)),
                ('facility_sat', models.FloatField(blank=True, db_column='FACILITY_SAT', null=True)),
                ('fac_dir_call', models.TextField(blank=True, db_column='FAC_DIR_CALL', null=True)),
                ('fac_type', models.TextField(blank=True, db_column='FAC_TYPE', null=True)),
                ('failed_battery_test', models.BigIntegerField(blank=True, db_column='FAILED_BATTERY_TEST', null=True)),
                ('first_fac_type', models.CharField(blank=True, db_column='FIRST_FAC_TYPE', max_length=255, null=True)),
                ('fst_booth', models.TextField(blank=True, db_column='FST_BOOTH', null=True)),
                ('fst_ol_time', models.DateTimeField(blank=True, db_column='FST_OL_TIME', null=True)),
                ('fst_shop', models.CharField(blank=True, db_column='FST_SHOP', max_length=255, null=True)),
                ('fst_spot_time', models.DateTimeField(blank=True, db_column='FST_SPOT_TIME', null=True)),
                ('fst_tr_code', models.TextField(blank=True, db_column='FST_TR_CODE', null=True)),
                ('gps_ind', models.TextField(blank=True, db_column='GPS_IND', null=True)),
                ('grid_id', models.CharField(blank=True, db_column='GRID_ID', max_length=255, null=True)),
                ('grid_zipcode', models.CharField(blank=True, db_column='GRID_ZIPCODE', max_length=255, null=True)),
                ('g_to_g', models.IntegerField(blank=True, db_column='G_TO_G', null=True)),
                ('g_to_ng', models.IntegerField(blank=True, db_column='G_TO_NG', null=True)),
                ('heavy_user', models.FloatField(blank=True, db_column='HEAVY_USER', null=True)),
                ('hm_lkout', models.TextField(blank=True, db_column='HM_LKOUT', null=True)),
                ('invite_sc_dt', models.DateTimeField(blank=True, db_column='INVITE_SC_DT', null=True)),
                ('itu_bbt', models.TextField(blank=True, db_column='ITU_BBT', null=True)),
                ('itu_nav', models.TextField(blank=True, db_column='ITU_NAV', null=True)),
                ('itu_odb2', models.TextField(blank=True, db_column='ITU_ODB2', null=True)),
                ('ivr_aqs12_eli', models.TextField(blank=True, db_column='IVR_AQS12_ELI', null=True)),
                ('ivr_requested', models.TextField(blank=True, db_column='IVR_REQUESTED', null=True)),
                ('kept_informed_sat', models.FloatField(blank=True, db_column='KEPT_INFORMED_SAT', null=True)),
                ('late', models.IntegerField(blank=True, db_column='LATE', null=True)),
                ('long_ata', models.IntegerField(blank=True, db_column='LONG_ATA', null=True)),
                ('lst_spot_time', models.DateTimeField(blank=True, db_column='LST_SPOT_TIME', null=True)),
                ('match_key', models.CharField(blank=True, db_column='MATCH_KEY', max_length=255, null=True)),
                ('match_key_surveys', models.CharField(blank=True, db_column='MATCH_KEY_surveys', max_length=255, null=True, unique=True)),
                ('mbr_complaint', models.TextField(blank=True, db_column='MBR_COMPLAINT', null=True)),
                ('mbr_compliment', models.TextField(blank=True, db_column='MBR_COMPLIMENT', null=True)),
                ('mbr_cty_nm', models.TextField(blank=True, db_column='MBR_CTY_NM', null=True)),
                ('mbr_join_dt', models.TextField(blank=True, db_column='MBR_JOIN_DT', null=True)),
                ('mbr_mbr_typ', models.TextField(blank=True, db_column='MBR_MBR_TYP', null=True)),
                ('mbr_pstl_cd', models.TextField(blank=True, db_column='MBR_PSTL_CD', null=True)),
                ('mbr_st_cd', models.TextField(blank=True, db_column='MBR_ST_CD', null=True)),
                ('miles_dest', models.FloatField(blank=True, db_column='MILES_DEST', null=True)),
                ('month', models.BigIntegerField(blank=True, db_column='MONTH', null=True)),
                ('network_pvd', models.TextField(blank=True, db_column='NETWORK_PVD', null=True)),
                ('ng_to_g', models.IntegerField(blank=True, db_column='NG_TO_G', null=True)),
                ('ng_to_ng', models.IntegerField(blank=True, db_column='NG_TO_NG', null=True)),
                ('nps', models.FloatField(blank=True, db_column='NPS', null=True)),
                ('nps_nps_group', models.FloatField(blank=True, db_column='NPS_NPS_GROUP', null=True)),
                ('nsr', models.IntegerField(blank=True, db_column='NSR', null=True)),
                ('nt_call_ind', models.TextField(blank=True, db_column='NT_CALL_IND', null=True)),
                ('n_mbr_ind', models.TextField(blank=True, db_column='N_MBR_IND', null=True)),
                ('ob_bc_scanner', models.TextField(blank=True, db_column='OB_BC_SCANNER', null=True)),
                ('ob_printer', models.TextField(blank=True, db_column='OB_PRINTER', null=True)),
                ('odb_pos', models.TextField(blank=True, db_column='ODB_POS', null=True)),
                ('on_time', models.IntegerField(blank=True, db_column='ON_TIME', null=True)),
                ('otg_sol_code', models.TextField(blank=True, db_column='OTG_SOL_CODE', null=True)),
                ('oth_dol', models.TextField(blank=True, db_column='OTH_DOL', null=True)),
                ('outside_communicated', models.IntegerField(blank=True, db_column='OUTSIDE_COMMUNICATED', null=True)),
                ('overall_sat', models.BigIntegerField(blank=True, db_column='OVERALL_SAT', null=True)),
                ('outc1', models.FloatField(blank=True, db_column='OutC1', null=True)),
                ('plus_ind', models.TextField(blank=True, db_column='PLUS_IND', null=True)),
                ('pl_dol', models.TextField(blank=True, db_column='PL_DOL', null=True)),
                ('primary_key', models.BigIntegerField(blank=True, db_column='PRIMARY_KEY', null=True)),
                ('prim_bat_rider', models.TextField(blank=True, db_column='PRIM_BAT_RIDER', null=True)),
                ('prim_rpr_perfda', models.TextField(blank=True, db_column='PRIM_RPR_PERFDA', null=True)),
                ('prim_rpr_perfdb', models.TextField(blank=True, db_column='PRIM_RPR_PERFDB', null=True)),
                ('promised_time', models.DateTimeField(blank=True, db_column='PROMISED_TIME', null=True)),
                ('pr_dol', models.TextField(blank=True, db_column='PR_DOL', null=True)),
                ('pta', models.DecimalField(blank=True, db_column='PTA', decimal_places=1, max_digits=22, null=True)),
                ('q24', models.FloatField(blank=True, db_column='Q24', null=True)),
                ('q26', models.FloatField(blank=True, db_column='Q26', null=True)),
                ('q27', models.FloatField(blank=True, db_column='Q27', null=True)),
                ('q28', models.FloatField(blank=True, db_column='Q28', null=True)),
                ('q30', models.TextField(blank=True, db_column='Q30', null=True)),
                ('q_sc_dt', models.DateTimeField(blank=True, db_column='Q_SC_DT', null=True)),
                ('rap_ind', models.TextField(blank=True, db_column='RAP_IND', null=True)),
                ('rec_ind', models.TextField(blank=True, db_column='REC_IND', null=True)),
                ('region', models.CharField(blank=True, db_column='REGION', max_length=255, null=True)),
                ('renewal_mnth', models.TextField(blank=True, db_column='RENEWAL_MNTH', null=True)),
                ('replaced_batt_on_failed_batt_call', models.IntegerField(blank=True, db_column='REPLACED_BATT_ON_FAILED_BATT_CALL', null=True)),
                ('request_service_sat', models.FloatField(blank=True, db_column='REQUEST_SERVICE_SAT', null=True)),
                ('resolution', models.TextField(blank=True, db_column='RESOLUTION', null=True)),
                ('resolution_desc', models.TextField(blank=True, db_column='RESOLUTION_DESC', null=True)),
                ('responserequests', models.TextField(blank=True, db_column='RESPONSERequests', null=True)),
                ('response_loc_req', models.TextField(blank=True, db_column='RESPONSE_LOC_REQ', null=True)),
                ('response_loc_used', models.TextField(blank=True, db_column='RESPONSE_LOC_USED', null=True)),
                ('response_reg', models.TextField(blank=True, db_column='RESPONSE_REG', null=True)),
                ('response_sat', models.FloatField(blank=True, db_column='RESPONSE_SAT', null=True)),
                ('re_tm', models.DateTimeField(blank=True, db_column='RE_TM', null=True)),
                ('rpst_dt', models.TextField(blank=True, db_column='RPST_DT', null=True)),
                ('rpst_trained', models.TextField(blank=True, db_column='RPST_TRAINED', null=True)),
                ('rv_dol', models.TextField(blank=True, db_column='RV_DOL', null=True)),
                ('recordeddate', models.DateTimeField(blank=True, db_column='RecordedDate', null=True)),
                ('renew', models.FloatField(blank=True, db_column='Renew', null=True)),
                ('renew_nps_group', models.FloatField(blank=True, db_column='Renew_NPS_GROUP', null=True)),
                ('responseid', models.TextField(blank=True, db_column='ResponseId', null=True)),
                ('sc_aaia_batt_typ', models.TextField(blank=True, db_column='SC_AAIA_BATT_TYP', null=True)),
                ('sc_batt_repl_indic', models.TextField(blank=True, db_column='SC_BATT_REPL_INDIC', null=True)),
                ('sc_batt_test_results', models.TextField(blank=True, db_column='SC_BATT_TEST_RESULTS', null=True)),
                ('sc_batt_tst_cd', models.TextField(blank=True, db_column='SC_BATT_TST_CD', null=True)),
                ('sc_bat_svc_ind', models.TextField(blank=True, db_column='SC_BAT_SVC_IND', null=True)),
                ('sc_call_clb_cd', models.CharField(blank=True, db_column='SC_CALL_CLB_CD', max_length=255, null=True)),
                ('sc_call_clb_mbr_id', models.CharField(blank=True, db_column='SC_CALL_CLB_MBR_ID', max_length=255, null=True)),
                ('sc_call_mbr_id', models.CharField(blank=True, db_column='SC_CALL_MBR_ID', max_length=255, null=True)),
                ('sc_clr_cd', models.TextField(blank=True, db_column='SC_CLR_CD', null=True)),
                ('sc_club_code', models.TextField(blank=True, db_column='SC_CLUB_CODE', null=True)),
                ('sc_cl_dttm', models.DateTimeField(blank=True, db_column='SC_CL_DTTM', null=True)),
                ('sc_comm_ctr', models.TextField(blank=True, db_column='SC_COMM_CTR', null=True)),
                ('sc_comm_ctr_sub', models.TextField(blank=True, db_column='SC_COMM_CTR_SUB', null=True)),
                ('sc_disposition', models.TextField(blank=True, db_column='SC_DISPOSITION', null=True)),
                ('sc_di_dttm', models.DateTimeField(blank=True, db_column='SC_DI_DTTM', null=True)),
                ('sc_dt', models.DateTimeField(blank=True, db_column='SC_DT', null=True)),
                ('sc_dt_surveys', models.DateTimeField(blank=True, db_column='SC_DT_surveys', null=True)),
                ('sc_er_dttm', models.DateTimeField(blank=True, db_column='SC_ER_DTTM', null=True)),
                ('sc_eta', models.DateTimeField(blank=True, db_column='SC_ETA', null=True)),
                ('sc_id', models.BigIntegerField(blank=True, db_column='SC_ID', null=True)),
                ('sc_id_surveys', models.TextField(blank=True, db_column='SC_ID_surveys', null=True)),
                ('sc_lst_di_dttm', models.DateTimeField(blank=True, db_column='SC_LST_DI_DTTM', null=True)),
                ('sc_ls_or_tw_cd', models.TextField(blank=True, db_column='SC_LS_OR_TW_CD', null=True)),
                ('sc_mbr_cb_indic', models.TextField(blank=True, db_column='SC_MBR_CB_INDIC', null=True)),
                ('sc_mbr_cb_ph_cl', models.TextField(blank=True, db_column='SC_MBR_CB_PH_CL', null=True)),
                ('sc_miles_tw', models.TextField(blank=True, db_column='SC_MILES_TW', null=True)),
                ('sc_mob_diag_cd', models.TextField(blank=True, db_column='SC_MOB_DIAG_CD', null=True)),
                ('sc_ol_dttm', models.DateTimeField(blank=True, db_column='SC_OL_DTTM', null=True)),
                ('sc_prm_arr_dttm', models.DateTimeField(blank=True, db_column='SC_PRM_ARR_DTTM', null=True)),
                ('sc_prob_cd', models.TextField(blank=True, db_column='SC_PROB_CD', null=True)),
                ('sc_reasgn_rsn_cd', models.TextField(blank=True, db_column='SC_REASGN_RSN_CD', null=True)),
                ('sc_recv_dttm', models.DateTimeField(blank=True, db_column='SC_RECV_DTTM', null=True)),
                ('sc_res_cd', models.TextField(blank=True, db_column='SC_RES_CD', null=True)),
                ('sc_res_cd2', models.TextField(blank=True, db_column='SC_RES_CD2', null=True)),
                ('sc_rev_ls_or_tw_cd', models.TextField(blank=True, db_column='SC_REV_LS_OR_TW_CD', null=True)),
                ('sc_rso', models.TextField(blank=True, db_column='SC_RSO', null=True)),
                ('sc_svc_clb_cd', models.TextField(blank=True, db_column='SC_SVC_CLB_CD', null=True)),
                ('sc_svc_prov_type', models.CharField(blank=True, db_column='SC_SVC_PROV_TYPE', max_length=255, null=True)),
                ('sc_tw_dttm', models.DateTimeField(blank=True, db_column='SC_TW_DTTM', null=True)),
                ('sc_veh_manfr_nm', models.TextField(blank=True, db_column='SC_VEH_MANFR_NM', null=True)),
                ('sc_veh_manf_yr_dt', models.TextField(blank=True, db_column='SC_VEH_MANF_YR_DT', null=True)),
                ('sc_veh_mdl_nm', models.TextField(blank=True, db_column='SC_VEH_MDL_NM', null=True)),
                ('sc_veh_type', models.TextField(blank=True, db_column='SC_VEH_TYPE', null=True)),
                ('sday_ssvc', models.TextField(blank=True, db_column='SDAY_SSVC', null=True)),
                ('shop_zip', models.FloatField(blank=True, db_column='SHOP_ZIP', null=True)),
                ('short_match_key', models.CharField(blank=True, db_column='SHORT_MATCH_KEY', max_length=255, null=True)),
                ('single_state', models.TextField(blank=True, db_column='SINGLE_STATE', null=True)),
                ('sms_click', models.TextField(blank=True, db_column='SMS_CLICK', null=True)),
                ('sms_elig', models.TextField(blank=True, db_column='SMS_ELIG', null=True)),
                ('sms_notify', models.TextField(blank=True, db_column='SMS_NOTIFY', null=True)),
                ('sms_opted_in', models.TextField(blank=True, db_column='SMS_OPTED_IN', null=True)),
                ('sms_sent', models.TextField(blank=True, db_column='SMS_SENT', null=True)),
                ('sp_fac_id', models.TextField(blank=True, db_column='SP_FAC_ID', null=True)),
                ('svc_facl_id', models.CharField(blank=True, db_column='SVC_FACL_ID', max_length=255, null=True)),
                ('svc_facl_nm', models.CharField(blank=True, db_column='SVC_FACL_NM', max_length=255, null=True)),
                ('svc_facl_rep_id', models.CharField(blank=True, db_column='SVC_FACL_REP_ID', max_length=255, null=True)),
                ('tcd', models.TextField(blank=True, db_column='TCD', null=True)),
                ('tech_assist', models.TextField(blank=True, db_column='TECH_ASSIST', null=True)),
                ('territory', models.CharField(blank=True, db_column='TERRITORY', max_length=255, null=True)),
                ('text_msg', models.BigIntegerField(blank=True, db_column='TEXT_MSG', null=True)),
                ('tlc_desc', models.TextField(blank=True, db_column='TLC_DESC', null=True)),
                ('tow_cost', models.FloatField(blank=True, db_column='TOW_COST', null=True)),
                ('tow_dest_in_record', models.TextField(blank=True, db_column='TOW_DEST_IN_RECORD', null=True)),
                ('tow_dest_lat', models.TextField(blank=True, db_column='TOW_DEST_LAT', null=True)),
                ('tow_dest_lon', models.TextField(blank=True, db_column='TOW_DEST_LON', null=True)),
                ('tow_dest_near_cty_nm', models.TextField(blank=True, db_column='TOW_DEST_NEAR_CTY_NM', null=True)),
                ('trc_call', models.TextField(blank=True, db_column='TRC_CALL', null=True)),
                ('trk_avl_indic', models.TextField(blank=True, db_column='TRK_AVL_INDIC', null=True)),
                ('trk_disp', models.TextField(blank=True, db_column='TRK_DISP', null=True)),
                ('trk_id', models.TextField(blank=True, db_column='TRK_ID', null=True)),
                ('trk_mobdiag_indic', models.TextField(blank=True, db_column='TRK_MOBDIAG_INDIC', null=True)),
                ('trk_term', models.TextField(blank=True, db_column='TRK_TERM', null=True)),
                ('trk_type', models.TextField(blank=True, db_column='TRK_TYPE', null=True)),
                ('trk_ware', models.TextField(blank=True, db_column='TRK_WARE', null=True)),
                ('tsprequest', models.TextField(blank=True, db_column='TSPRequest', null=True)),
                ('ttl_cost_all_reps', models.TextField(blank=True, db_column='TTL_COST_ALL_REPS', null=True)),
                ('tt_state', models.TextField(blank=True, db_column='TT_STATE', null=True)),
                ('type_of_service', models.TextField(blank=True, db_column='Type_Of_Service', null=True)),
                ('veh_id_nr', models.TextField(blank=True, db_column='VEH_ID_NR', null=True)),
                ('virt_stat', models.TextField(blank=True, db_column='VIRT_STAT', null=True)),
                ('year', models.BigIntegerField(blank=True, db_column='YEAR', null=True)),
                ('driver10', models.FloatField(blank=True, null=True)),
                ('elapsedtime', models.TextField(blank=True, db_column='elapsedTime', null=True)),
                ('event_type', models.TextField(blank=True, null=True)),
                ('id_primary', models.IntegerField(blank=True, null=True)),
                ('identifier', models.TextField(blank=True, null=True)),
                ('new_fields_date_updated', models.DateTimeField(blank=True, null=True)),
                ('service_provider', models.TextField(blank=True, null=True)),
                ('totclubs', models.TextField(blank=True, null=True)),
                ('truck', models.TextField(blank=True, null=True)),
                ('reroute', models.BooleanField(null=True, db_column='REROUTE')),
                ('remove', models.BooleanField(db_column='REMOVE', default=False)),
                ('emp_driver_id', models.ForeignKey(blank=True, db_column='EMP_DRIVER_ID', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='driver_id', to='accounts.Employee')),
                ('emp_svc_facl_rep', models.ForeignKey(blank=True, db_column='EMP_SVC_FACL_REP', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='svc_facl_rep', to='accounts.Employee')),
                ('fleet_supervisor', models.ForeignKey(blank=True, db_column='FLEET_SUPERVISOR', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fleet_supervisor_std12e', to='accounts.Employee')),
                ('org_booth', models.ForeignKey(blank=True, db_column='ORG_BOOTH', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='org_booth', to='accounts.Organization')),
                ('org_business_id', models.ForeignKey(blank=True, db_column='ORG_BUSINESS_ID', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='org_business_id', to='accounts.Organization')),
                ('org_call_center', models.ForeignKey(blank=True, db_column='ORG_CALL_CENTER', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='org_call_center', to='accounts.Organization')),
                ('org_call_center_group', models.ForeignKey(blank=True, db_column='ORG_CALL_CENTER_GROUP', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='org_call_center_group', to='accounts.Organization')),
                ('org_club_region', models.ForeignKey(blank=True, db_column='ORG_CLUB_REGION', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='org_club_region', to='accounts.Organization')),
                ('org_grid', models.ForeignKey(blank=True, db_column='ORG_GRID', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='org_grid', to='accounts.Organization')),
                ('org_market_id', models.ForeignKey(blank=True, db_column='ORG_MARKET_ID', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='org_market_id', to='accounts.Organization')),
                ('org_svc_facl_id', models.ForeignKey(blank=True, db_column='ORG_SVC_FACL_ID', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='org_svc_facl_id', to='accounts.Organization')),
                ('org_territory_id', models.ForeignKey(blank=True, db_column='ORG_TERRITORY_ID', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='org_territory_id', to='accounts.Organization')),
            ],
        ),
        migrations.CreateModel(
            name='Std12ETiers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('bottom', models.FloatField(blank=True, null=True)),
                ('top', models.FloatField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('metrics', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Std12ETierTimePeriods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('start', models.DateField(blank=True, null=True)),
                ('end', models.DateField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('recorded_cutoff', models.DateField(blank=True, null=True)),
                ('recorded_cutoff_time', models.DateTimeField(blank=True, null=True)),
                ('show_until', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TimeMetricPeriods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discrete_time_category', models.CharField(blank=True, db_column='DISCRETE_TIME_CATEGORY', max_length=255, null=True)),
                ('sc_dt', models.DateTimeField(blank=True, db_column='SC_DT', null=True)),
                ('metric_type', models.CharField(blank=True, db_column='METRIC_TYPE', max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TimeseriesExpectations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization_id', models.FloatField(blank=True, null=True)),
                ('date', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TimeseriesPredictionsByFourHourNew',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sc_dt', models.DateTimeField(blank=True, db_column='SC_DT', null=True)),
                ('volume_pred', models.FloatField(blank=True, db_column='VOLUME_PRED', null=True)),
                ('actual_volume', models.FloatField(blank=True, db_column='ACTUAL_VOLUME', null=True)),
                ('code', models.CharField(blank=True, db_column='TCD', max_length=255, null=True)),
                ('date_pred', models.DateTimeField(blank=True, db_column='DATE_PREDICTED', null=True)),
                ('organization_id', models.FloatField(blank=True, db_column='ORGANIZATION_ID', null=True)),
                ('was_optimized', models.BooleanField(null=True, db_column='WAS_OPTIMIZED')),
                ('productivity', models.FloatField(blank=True, db_column='PRODUCTIVITY', null=True)),
                ('drivers_needed', models.BigIntegerField(blank=True, db_column='DRIVERS_NEEDED', null=True)),
                ('rollover_hour_minus_one', models.BigIntegerField(blank=True, db_column='rollover_hour_minus_one', null=True)),
                ('rollover_hour_minus_two', models.BigIntegerField(blank=True, db_column='rollover_hour_minus_two', null=True)),
                ('rollover_hour_minus_three', models.BigIntegerField(blank=True, db_column='rollover_hour_minus_three', null=True)),
                ('waiters', models.BigIntegerField(blank=True, db_column='waiters', null=True)),
                ('new_drivers_needed', models.BigIntegerField(blank=True, db_column='new_drivers_needed', null=True)),
                ('send_home', models.BigIntegerField(blank=True, db_column='send_home', null=True)),
                ('call_time', models.FloatField(blank=True, db_column='call_time', null=True)),
                ('total_drivers', models.BigIntegerField(blank=True, db_column='total_drivers', null=True)),
                ('today', models.FloatField(blank=True, db_column='TODAY_TOTAL_VOLUME', null=True)),
                ('org_type', models.CharField(blank=True, db_column='ORG_TYPE', max_length=255, null=True)),
                ('active_holidays', models.BooleanField(null=True, db_column='ACTIVE_HOLIDAYS')),
                ('active_weather', models.BooleanField(null=True, db_column='ACTIVE_WEATHER')),
                ('holiday_impacts', models.FloatField(blank=True, db_column='HOLIDAY_IMPACTS', null=True)),
                ('weather_impacts', models.FloatField(blank=True, db_column='WEATHER_IMPACTS', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TimeseriesPredictionsByHourNew',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sc_dt', models.DateTimeField(blank=True, db_column='SC_DT', null=True)),
                ('volume_pred', models.FloatField(blank=True, db_column='VOLUME_PRED', null=True)),
                ('actual_volume', models.FloatField(blank=True, db_column='ACTUAL_VOLUME', null=True)),
                ('code', models.CharField(blank=True, db_column='TCD', max_length=255, null=True)),
                ('date_pred', models.DateTimeField(blank=True, db_column='DATE_PREDICTED', null=True)),
                ('organization_id', models.FloatField(blank=True, db_column='ORGANIZATION_ID', null=True)),
                ('was_optimized', models.BooleanField(null=True, db_column='WAS_OPTIMIZED')),
                ('productivity', models.FloatField(blank=True, db_column='PRODUCTIVITY', null=True)),
                ('drivers_needed', models.BigIntegerField(blank=True, db_column='DRIVERS_NEEDED', null=True)),
                ('rollover_hour_minus_one', models.BigIntegerField(blank=True, db_column='rollover_hour_minus_one', null=True)),
                ('rollover_hour_minus_two', models.BigIntegerField(blank=True, db_column='rollover_hour_minus_two', null=True)),
                ('rollover_hour_minus_three', models.BigIntegerField(blank=True, db_column='rollover_hour_minus_three', null=True)),
                ('waiters', models.BigIntegerField(blank=True, db_column='waiters', null=True)),
                ('new_drivers_needed', models.BigIntegerField(blank=True, db_column='new_drivers_needed', null=True)),
                ('send_home', models.BigIntegerField(blank=True, db_column='send_home', null=True)),
                ('call_time', models.FloatField(blank=True, db_column='call_time', null=True)),
                ('total_drivers', models.BigIntegerField(blank=True, db_column='total_drivers', null=True)),
                ('today', models.FloatField(blank=True, db_column='TODAY_TOTAL_VOLUME', null=True)),
                ('org_type', models.CharField(blank=True, db_column='ORG_TYPE', max_length=255, null=True)),
                ('active_holidays', models.BooleanField(null=True, db_column='ACTIVE_HOLIDAYS')),
                ('active_weather', models.BooleanField(null=True, db_column='ACTIVE_WEATHER')),
                ('holiday_impacts', models.FloatField(blank=True, db_column='HOLIDAY_IMPACTS', null=True)),
                ('weather_impacts', models.FloatField(blank=True, db_column='WEATHER_IMPACTS', null=True)),
                ('time_type', models.CharField(blank=True, db_column='TIME_TYPE', max_length=255, null=True)),
            ],
            options={
                'db_table': 'dashboard_timeseriespredictionsbyhournew',
            },
        ),
        migrations.CreateModel(
            name='TimeseriesPredictionsByHourSwap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sc_dt', models.DateTimeField(blank=True, db_column='SC_DT', null=True)),
                ('volume_pred', models.FloatField(blank=True, db_column='VOLUME_PRED', null=True)),
                ('actual_volume', models.FloatField(blank=True, db_column='ACTUAL_VOLUME', null=True)),
                ('code', models.CharField(blank=True, db_column='TCD', max_length=255, null=True)),
                ('date_pred', models.DateTimeField(blank=True, db_column='DATE_PREDICTED', null=True)),
                ('organization_id', models.FloatField(blank=True, db_column='ORGANIZATION_ID', null=True)),
                ('was_optimized', models.BooleanField(null=True, db_column='WAS_OPTIMIZED')),
                ('productivity', models.FloatField(blank=True, db_column='PRODUCTIVITY', null=True)),
                ('drivers_needed', models.BigIntegerField(blank=True, db_column='DRIVERS_NEEDED', null=True)),
                ('rollover_hour_minus_one', models.BigIntegerField(blank=True, db_column='rollover_hour_minus_one', null=True)),
                ('rollover_hour_minus_two', models.BigIntegerField(blank=True, db_column='rollover_hour_minus_two', null=True)),
                ('rollover_hour_minus_three', models.BigIntegerField(blank=True, db_column='rollover_hour_minus_three', null=True)),
                ('waiters', models.BigIntegerField(blank=True, db_column='waiters', null=True)),
                ('new_drivers_needed', models.BigIntegerField(blank=True, db_column='new_drivers_needed', null=True)),
                ('send_home', models.BigIntegerField(blank=True, db_column='send_home', null=True)),
                ('call_time', models.FloatField(blank=True, db_column='call_time', null=True)),
                ('total_drivers', models.BigIntegerField(blank=True, db_column='total_drivers', null=True)),
                ('today', models.FloatField(blank=True, db_column='TODAY_TOTAL_VOLUME', null=True)),
                ('org_type', models.CharField(blank=True, db_column='ORG_TYPE', max_length=255, null=True)),
                ('active_holidays', models.BooleanField(null=True, db_column='ACTIVE_HOLIDAYS')),
                ('active_weather', models.BooleanField(null=True, db_column='ACTIVE_WEATHER')),
                ('holiday_impacts', models.FloatField(blank=True, db_column='HOLIDAY_IMPACTS', null=True)),
                ('weather_impacts', models.FloatField(blank=True, db_column='WEATHER_IMPACTS', null=True)),
                ('time_type', models.CharField(blank=True, db_column='TIME_TYPE', max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TimeseriesSchedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization_id', models.FloatField(blank=True, null=True)),
                ('date', models.DateField()),
            ],
            options={
                'db_table': 'dashboard_timeseriesschedule',
            },
        ),
        migrations.CreateModel(
            name='TimeseriesScheduledDiversTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.CharField(blank=True, max_length=20, null=True)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('duration', models.IntegerField(blank=True, null=True)),
                ('schedule_type', models.CharField(blank=True, max_length=255, null=True)),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='TimeseriesScheduledDrivers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField()),
                ('duration', models.IntegerField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('schedule_type', models.CharField(blank=True, max_length=225, null=True)),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='scheduled_driver', to='accounts.Employee')),
                ('placeholder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.PlaceholderDriver')),
                ('schedule', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='scheduled_drivers', to='dashboard.TimeseriesSchedule')),
            ],
            options={
                'db_table': 'dashboard_timeseriesscheduleddrivers',
            },
        ),
        migrations.CreateModel(
            name='TimeseriesScheduleTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization_id', models.FloatField(blank=True, null=True)),
                ('date_saved', models.DateField(auto_now=True)),
            ],
        ),
        migrations.AddField(
            model_name='timeseriesscheduleddiverstemplate',
            name='template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='drivers_template', to='dashboard.TimeseriesScheduleTemplate'),
        ),
        migrations.AlterIndexTogether(
            name='timeseriesschedule',
            index_together={('organization_id', 'date')},
        ),
        migrations.AlterIndexTogether(
            name='timeseriespredictionsbyhourswap',
            index_together={('organization_id', 'sc_dt')},
        ),
        migrations.AlterIndexTogether(
            name='timeseriespredictionsbyhournew',
            index_together={('organization_id', 'sc_dt')},
        ),
        migrations.AlterIndexTogether(
            name='timeseriespredictionsbyfourhournew',
            index_together={('organization_id', 'sc_dt')},
        ),
        migrations.AlterIndexTogether(
            name='rawops',
            index_together={('org_business_id', 'emp_driver_id'), ('sc_id', 'sc_dt')},
        ),
        migrations.AlterIndexTogether(
            name='std12eraw',
            index_together={('sc_dt_surveys', 'directional_error', 'accreditation', 'remove', 'reroute', 'sc_svc_prov_type')},
        ),
        migrations.AlterIndexTogether(
            name='dashboardnew',
            index_together={('employee', 'sc_dt', 'time_type'), ('employee', 'organization', 'sc_dt', 'time_type'), ('parent_id', 'sc_dt', 'time_type'), ('organization', 'sc_dt', 'time_type'), ('sc_dt', 'index_type', 'time_type'), ('time_type', 'sc_dt')},
        ),
    ]
