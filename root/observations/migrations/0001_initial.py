# Generated by Django 2.1.4 on 2021-03-09 23:36

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('dashboard', '0001_initial'),
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commentDate', models.DateTimeField(auto_now=True, verbose_name='date published')),
                ('commentText', models.TextField()),
                ('requestData', models.TextField(blank=True, null=True)),
                ('order', models.IntegerField(default=0)),
                ('important', models.BooleanField(default=False)),
                ('edited', models.BooleanField(default=False)),
                ('is_reply', models.BooleanField(default=False)),
                ('private', models.BooleanField(default=False)),
                ('chart_element', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comment_chart_element', to='dashboard.EmployeeDashboardElement')),
                ('comment_likes', models.ManyToManyField(related_name='comment_likes', to='accounts.Employee')),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comment_emp', to='accounts.Employee')),
                ('employeeDashboard', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comment_emp_db', to='accounts.Employee')),
                ('groups', models.ManyToManyField(blank=True, related_name='comment_group', to='accounts.EmployeeGroup')),
                ('mentions', models.ManyToManyField(blank=True, related_name='comment_mentions', to='accounts.Employee')),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comment_org', to='accounts.Organization')),
                ('people_of_interest', models.ManyToManyField(related_name='people_of_interest', to='accounts.Employee')),
                ('reply_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comment_parent', to='observations.Comments')),
                ('seen_by', models.ManyToManyField(related_name='seen_by', to='accounts.Employee')),
                ('survey', models.ManyToManyField(blank=True, related_name='survey', to='dashboard.Std12EReduced')),
            ],
        ),
        migrations.CreateModel(
            name='Subscriptions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic_request_data', models.TextField(blank=True, null=True)),
                ('employee_subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='employee_subscription', to='accounts.Employee')),
                ('organization_subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='organization_subscription', to='accounts.Organization')),
                ('subscriptions', models.ManyToManyField(to='accounts.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='Topics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserCommentNotifications',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('newNotificationCount', models.IntegerField(default=0)),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comment_notifications', to='accounts.Employee')),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comment_notification_org', to='accounts.Organization')),
            ],
        ),
        migrations.AddField(
            model_name='comments',
            name='topics',
            field=models.ManyToManyField(blank=True, related_name='comment_topics', to='observations.Topics'),
        ),
        migrations.AlterIndexTogether(
            name='comments',
            index_together={('organization', 'commentDate')},
        ),
    ]
