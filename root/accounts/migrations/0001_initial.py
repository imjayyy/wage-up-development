# Generated by Django 2.1.4 on 2021-03-09 23:36

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UserActivity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('organization', models.CharField(blank=True, max_length=255, null=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('username', models.CharField(max_length=150)),
                ('territory', models.CharField(blank=True, max_length=255, null=True)),
                ('position_type', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'user_activity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ApprovalRequestAppeals',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appeals_reason', models.CharField(choices=[('Battery Warranty Voided', 'battery_warranty_void'), ('Battery Replacement Not Eligible (no fail)', 'battery_replace_not_eligible'), ('Servicing Restrictions (Club or State mandated/ Environment / Weather)', 'service_restriction_mandate'), ('Service Exceeds Membership Coverage Limits (enrollment, tolls, mileage, excess winch etc.)', 'service_exceeds_member_limits'), ('Coverage Exclusions (AGM Battery, tire plug, diesel fuel, windshield wiper fluid, etc.)', 'coverage_exclusion'), ('Service Requirements (vehicle keys etc.)', 'service_requirements'), ('Incorrect Contact and Location Information* (unable to be resolved through attempts) ', 'incorrect_info'), ('communications_problem', 'communications_problem'), ('System/App Malfunction ', 'system_malfunction'), ('Phone Connectivity', 'phone_connectivity'), ('Survey comments/answers are about an experience with a different station or driver.', 'different_driver')], max_length=255)),
                ('exception_granted', models.BooleanField(blank=True, null=True)),
                ('reviewer_appeals_reason', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ApprovalRequestEmployeeAvailability',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.CharField(blank=True, max_length=255, null=True)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('prev_start', models.TimeField(blank=True, null=True)),
                ('prev_end', models.TimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ApprovalRequestEmployeeTimeOff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pto_start', models.DateField(blank=True, null=True)),
                ('pto_end', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ApprovalRequests',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submission_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('review_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Pending_Review', 'Pending_Review'), ('Rejected', 'Rejected'), ('Approved', 'Approved')], default='Pending_Review', max_length=100)),
                ('requester_notes', models.TextField(blank=True, null=True)),
                ('approver_notes', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Bookmarks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display', models.CharField(blank=True, max_length=255, null=True)),
                ('link', models.CharField(blank=True, max_length=255, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_bookmark', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Cities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomEmail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('campaign', models.CharField(blank=True, max_length=255, null=True)),
                ('email_body', models.TextField()),
                ('email_subject', models.CharField(blank=True, max_length=255, null=True)),
                ('testing', models.BooleanField(default=True)),
                ('testing_email', models.CharField(blank=True, default='help@wageup.com', max_length=255, null=True)),
                ('from_email', models.CharField(blank=True, default='help@wageup.com', max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Duplicates',
            fields=[
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('normalized_name', models.TextField(blank=True, null=True)),
                ('public_name', models.BigIntegerField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('primary_key', models.AutoField(primary_key=True, serialize=False)),
                ('organization_parent_name', models.CharField(blank=True, db_column='ORGANIZATION_PARENT_NAME', max_length=255, null=True)),
                ('organization_grandparent_name', models.CharField(blank=True, db_column='ORGANIZATION_GRANDPARENT_NAME', max_length=255, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('raw_data_driver_id', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(max_length=255, null=True)),
                ('slug', models.SlugField(blank=True, null=True)),
                ('position_type', models.CharField(blank=True, choices=[('Driver', 'Driver'), ('Executive', 'Executive'), ('Station-Admin', 'Station-Admin'), ('Fleet-Manager', 'Fleet-Manager'), ('Call-Center-Operator', 'Call-Center-Operator'), ('Admin', 'Admin'), ('Appeals-Access', 'Appeals-Access'), ('Territory-Associate', 'Territory-Associate'), ('Bot', 'Bot')], max_length=255, null=True)),
                ('org_name_help', models.CharField(blank=True, max_length=255, null=True)),
                ('username_help', models.CharField(blank=True, max_length=255, null=True)),
                ('permission_help', models.CharField(blank=True, max_length=255, null=True)),
                ('full_name', models.CharField(blank=True, max_length=255, null=True)),
                ('display_name', models.CharField(blank=True, max_length=255, null=True)),
                ('data_name', models.CharField(blank=True, max_length=255, null=True)),
                ('updated', models.DateTimeField(blank=True, null=True)),
                ('latest_activity_on', models.DateField(blank=True, null=True)),
                ('invited_on', models.DateTimeField(blank=True, null=True)),
                ('login_id', models.CharField(blank=True, max_length=255, null=True)),
                ('duplicate', models.BooleanField(null=True)),
                ('unverified_email', models.CharField(blank=True, max_length=255, null=True)),
                ('no_match', models.BooleanField(null=True)),
                ('active', models.BooleanField(default=True)),
                ('user_mod', models.BooleanField(default=False)),
                ('updated_auto', models.DateTimeField(auto_now=True)),
                ('default_station', models.CharField(blank=True, max_length=255, null=True)),
                ('raw_data_driver_id', models.CharField(blank=True, max_length=255, null=True)),
                ('fleet_supervisor', models.ManyToManyField(blank=True, related_name='_employee_fleet_supervisor_+', to='accounts.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_name', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trouble_code_type', models.CharField(blank=True, max_length=255, null=True)),
                ('active_not_available', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee_profile', to='accounts.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeProfileEntries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.CharField(blank=True, max_length=255, null=True)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('pto_start', models.DateField(blank=True, null=True)),
                ('pto_end', models.DateField(blank=True, null=True)),
                ('driver_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee_profile_entries', to='accounts.EmployeeProfile')),
            ],
        ),
        migrations.CreateModel(
            name='EntityGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Invite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('created_on', models.DateField(auto_now_add=True, null=True)),
                ('sent_on', models.DateTimeField(blank=True, null=True)),
                ('already_used', models.BooleanField(default=False)),
                ('expiration', models.DateField(blank=True, null=True)),
                ('context_p1', models.TextField(blank=True, default='\n\nThis performance dashboard is your one-stop-shop for all the metrics you need to get better and to see how you compare \nto your peers. This is also where you can find out your latest scores in any ongoing games. \n\n', null=True)),
                ('context_p2', models.TextField(blank=True, default='', null=True)),
                ('campaign', models.CharField(blank=True, max_length=255, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invite', to=settings.AUTH_USER_MODEL)),
                ('created_by_employee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_by_invite', to='accounts.Employee')),
                ('employee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invite', to='accounts.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('real_name', models.CharField(blank=True, max_length=550, null=True)),
                ('type', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('updated', models.DateTimeField(blank=True, null=True)),
                ('slug', models.SlugField(blank=True, null=True)),
                ('parent_name', models.CharField(blank=True, max_length=255, null=True)),
                ('parent_type', models.CharField(blank=True, max_length=255, null=True)),
                ('display_name', models.CharField(blank=True, max_length=255, null=True)),
                ('facility_type', models.CharField(blank=True, max_length=255, null=True)),
                ('latest_activity_on', models.DateField(blank=True, null=True)),
                ('zip', models.CharField(blank=True, max_length=255, null=True)),
                ('related_orgs', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Permissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('explanation', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, null=True)),
                ('display_name', models.CharField(blank=True, max_length=255, null=True)),
                ('slug', models.SlugField(blank=True, null=True)),
                ('viewed_show', models.BooleanField(default=False)),
                ('phone_number', models.CharField(blank=True, max_length=255, null=True)),
                ('receive_email_notifications', models.BooleanField(null=True, default=False)),
                ('receive_phone_notifications', models.BooleanField(null=True, default=False)),
                ('site_visits', models.IntegerField(default=0)),
                ('photo_avatar', models.FileField(blank=True, null=True, upload_to='')),
                ('banner_pic', models.FileField(blank=True, null=True, upload_to='')),
                ('silence_all_notifications', models.BooleanField(default=False)),
                ('silence_login_notifications', models.BooleanField(default=True)),
                ('silence_watched_login_notifications', models.BooleanField(default=False)),
                ('silence_message_notifications', models.BooleanField(default=False)),
                ('chat_status', models.CharField(blank=True, max_length=255, null=True)),
                ('status_expiration', models.DateTimeField(blank=True, null=True)),
                ('employee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='profile', to='accounts.Employee')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='profile', to=settings.AUTH_USER_MODEL)),
                ('watching_chat_users', models.ManyToManyField(related_name='watching_chat_users', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='QAEmployeeFlags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('no_match', models.BooleanField(null=True)),
                ('fname', models.CharField(blank=True, max_length=255, null=True)),
                ('lname', models.CharField(blank=True, max_length=255, null=True)),
                ('problem', models.CharField(blank=True, max_length=255, null=True)),
                ('employee_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='qa', to='accounts.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='ScheduleOpenAvailability',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_schedule', models.DateField(blank=True, null=True)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('open', models.BooleanField(default=True)),
                ('service_type', models.CharField(blank=True, max_length=255, null=True)),
                ('drivers_accepted', models.ManyToManyField(related_name='drivers_scheduled', to='accounts.Employee')),
                ('drivers_available', models.ManyToManyField(related_name='drivers_said_yes', to='accounts.Employee')),
                ('drivers_rejected', models.ManyToManyField(related_name='drivers_said_no', to='accounts.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='StationDriver',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_sc_dt', models.DateField(blank=True, null=True)),
                ('driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='driver_stationDriver', to='accounts.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='UserActionDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('db_action_type', models.CharField(blank=True, max_length=255, null=True)),
                ('db_model', models.CharField(blank=True, max_length=255, null=True)),
                ('db_model_id', models.IntegerField(blank=True, null=True)),
                ('context', models.CharField(blank=True, max_length=255, null=True)),
                ('field', models.CharField(blank=True, max_length=255, null=True)),
                ('from_value', models.CharField(blank=True, max_length=255, null=True)),
                ('to_value', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserActions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display', models.CharField(blank=True, max_length=255, null=True)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('model_name', models.CharField(blank=True, max_length=255, null=True)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserLogins',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('login_time', models.DateTimeField(blank=True, null=True)),
                ('login_type', models.CharField(blank=True, max_length=255, null=True)),
                ('userId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SimpleAccountsOrgStations',
            fields=[
                ('wageup', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, related_name='simple_accounts', serialize=False, to='accounts.Organization')),
                ('station_name', models.CharField(blank=True, max_length=255, null=True)),
                ('wageup_station_biz_id', models.IntegerField(blank=True, null=True)),
                ('station_business_name', models.CharField(blank=True, max_length=255, null=True)),
                ('display_name', models.CharField(blank=True, max_length=255, null=True)),
                ('territory_name', models.CharField(blank=True, max_length=255, null=True)),
                ('market_name', models.CharField(blank=True, max_length=255, null=True)),
                ('club_region_name', models.CharField(blank=True, max_length=255, null=True)),
                ('facility_type', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'simple_accounts_org_stations',
                'managed': False,
            },
        ),
        migrations.AddField(
            model_name='useractiondetails',
            name='parent_action',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='details', to='accounts.UserActions'),
        ),
        migrations.AddField(
            model_name='stationdriver',
            name='station',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='station_stationDriver', to='accounts.Organization'),
        ),
        migrations.AddField(
            model_name='scheduleopenavailability',
            name='organization',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.Organization'),
        ),
        migrations.AddField(
            model_name='scheduleopenavailability',
            name='potential_drivers',
            field=models.ManyToManyField(related_name='potential_drivers', to='accounts.Employee'),
        ),
        migrations.AddField(
            model_name='qaemployeeflags',
            name='organization',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='qa', to='accounts.Organization'),
        ),
        migrations.AddField(
            model_name='qaemployeeflags',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='qa', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='organization',
            name='employees_under',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='org_employeeds_under', to='accounts.Organization'),
        ),
        migrations.AddField(
            model_name='organization',
            name='facility_type_parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='org_facility_type_parent', to='accounts.Organization'),
        ),
        migrations.AddField(
            model_name='organization',
            name='grandparent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='org_grandparent', to='accounts.Organization'),
        ),
        migrations.AddField(
            model_name='organization',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='org_parent', to='accounts.Organization'),
        ),
        migrations.AddField(
            model_name='employeegroup',
            name='permission',
            field=models.ManyToManyField(related_name='employee_group_permissions', to='accounts.Permissions'),
        ),
        migrations.AddField(
            model_name='employee',
            name='group',
            field=models.ManyToManyField(blank=True, null=True, related_name='employee_group', to='accounts.EmployeeGroup'),
        ),
        migrations.AddField(
            model_name='employee',
            name='organization',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employee', to='accounts.Organization'),
        ),
        migrations.AddField(
            model_name='employee',
            name='permission',
            field=models.ManyToManyField(blank=True, to='accounts.Permissions'),
        ),
        migrations.AddField(
            model_name='employee',
            name='registered_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employee_registered_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='employee',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employee', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='duplicates',
            name='employee',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='duplicates', to='accounts.Employee'),
        ),
        migrations.AddField(
            model_name='duplicates',
            name='organization',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='duplicates', to='accounts.Organization'),
        ),
        migrations.AddField(
            model_name='duplicates',
            name='organization_grandparent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='duplicates_grandparent', to='accounts.Organization'),
        ),
        migrations.AddField(
            model_name='duplicates',
            name='organization_parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='duplicates_parent', to='accounts.Organization'),
        ),
        migrations.AddField(
            model_name='cities',
            name='organization',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.Organization'),
        ),
        migrations.AddField(
            model_name='approvalrequests',
            name='approver',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approver_employee', to='accounts.Employee'),
        ),
        migrations.AddField(
            model_name='approvalrequests',
            name='requester',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='requester_employee', to='accounts.Employee'),
        ),
        migrations.AddField(
            model_name='approvalrequestemployeetimeoff',
            name='request_data',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='timeoff_approval', to='accounts.ApprovalRequests'),
        ),
        migrations.AddField(
            model_name='approvalrequestemployeeavailability',
            name='request_data',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='availability_approval', to='accounts.ApprovalRequests'),
        ),
        migrations.AddField(
            model_name='approvalrequestappeals',
            name='request_data',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appeals_approval', to='accounts.ApprovalRequests'),
        ),
        migrations.AlterIndexTogether(
            name='profile',
            index_together={('chat_status', 'user', 'silence_all_notifications', 'silence_message_notifications', 'silence_login_notifications', 'silence_watched_login_notifications')},
        ),
        migrations.AlterIndexTogether(
            name='organization',
            index_together={('name', 'type')},
        ),
        migrations.AlterIndexTogether(
            name='employeeprofile',
            index_together={('employee', 'active')},
        ),
        migrations.AlterIndexTogether(
            name='employee',
            index_together={('data_name', 'position_type')},
        ),
    ]
